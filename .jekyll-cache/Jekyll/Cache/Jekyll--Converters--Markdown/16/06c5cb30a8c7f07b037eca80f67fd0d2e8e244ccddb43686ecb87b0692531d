I"8<p><strong>‘<a href="https://github.com/appkr/whik">휙~</a>‘</strong> 라라벨은 도메인 이벤트를 클라이언트에게 브로드캐스트할 수 있는 기능을 제공한다. 5.2.39 기준으로 <code class="highlighter-rouge">pusher</code>, <code class="highlighter-rouge">redis</code>, <code class="highlighter-rouge">log</code> 등의 브로드캐스팅 드라이버를 지원한다. 이 데모에서는 라라벨이 <strong>‘휙~’</strong>하고 메시지를 던지면, Socket.io가 접속된 모든 클라이언트에게 <strong>‘휙~’</strong>하고 메시지를 전파한다.</p>

<p><strong>언제 어떻게 쓸 수 있나?</strong> 새로운 댓글이 작성되면 같은 댓글 목록을 보고 있는 사용자에게 새 댓글을 알리거나, 지금 서비스에 접속된 모든 사용자에게 푸시 알림을 보내는 등 서버에서 발생한 변경 내용을 클라이언트에 전파할 때 사용할 수 있다.</p>

<p>이 포스트는 데모 프로젝트를 복붙으로 따라해보기 위한 명령 및 코드 목록을 담고 있다. <strong><em>각 절의 작동 원리는 읽지 말고, 전체 동작을 한번 확인할 것을 권장한다.</em></strong></p>

<ol>
  <li><em>데모 환경 준비_</em> 오늘 AWS에 인수된 클라우드9을 이용한다.</li>
  <li><em>SocketChat_</em> Socket.io에서 제공하는 채팅 예제 프로젝트를 구동해 본다.</li>
  <li><em>Redis_</em> 라라벨과 Socket.io간의 메시지 중계자로 Redis를 이용한다.</li>
  <li><em>Broadcast_</em> 라라벨의 브로드캐스트 기능을 이용해 본다.</li>
</ol>

<p><small>* 웹 페이지의 DOM 조작을 위해 Vue.js<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">1</a></sup> 라이브러리를 이용할 것이다.</small></p>

<p>이 프로젝트는 라라캐스트의 <a href="https://laracasts.com/series/real-time-laravel-with-socket-io">Real-time Laravel with Socket.io</a> 시리즈를 보고, 필자 나름대로 해석하고 적용한 결과물이다.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><a href="//vuejs.org/">Vue.js</a>_제이쿼리를 대체할 수 있는 자바스크립트 라이브러리다. 앵귤러나 엠버처럼 풀 MVC 프레임워크가 아니라, 뷰 모델(DOM)만 건드리는 가벼운 녀석이다. 그럼에도 불구하고, 최신 프레임워크가 지원하는 양방향 데이터 바인딩등을 지원해서 개발 생산성이 높다. 2만개 이상의 스타를 가지고 있고, <a href="https://github.com/trending?since=monthly">깃허브 트렌딩에 계속 노미네이트</a>되는 등, ES6와 더불어 2016년에 꼭 배워야할 자바스크립트 라이브러리다. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET