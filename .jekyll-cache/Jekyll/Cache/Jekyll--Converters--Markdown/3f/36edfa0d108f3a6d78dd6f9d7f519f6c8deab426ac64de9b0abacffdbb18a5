I"}W<p>이번 포스트는 프로그램 실행 중에 만나는 스택 트레이스, 즉 예외 또는 에러 메시지를 읽는 법을 다루려고 합니다. 메모리의 스택 영역에 기록된 프로그램의 실행 이력을 역 추적하기때문에 스택 트레이스, 스택 백트레이스, 스택 트랙백이라 부른다는군요(<a href="https://en.wikipedia.org/wiki/Stack_trace">위키피디아</a>).</p>

<p><a href="https://i.stack.imgur.com/HOY4C.png"><img src="https://i.stack.imgur.com/HOY4C.png" alt="메모리 다이어그램" /></a></p>

<p><small>그림출처: https://i.stack.imgur.com/HOY4C.png</small></p>

<!--more-->
<div class="spacer">• • •</div>

<h2 id="1-실행-흐름">1 실행 흐름</h2>

<p>사전에서 프로그램을 찾아 보면, “진행 계획이나 순서, 또는 그 목록”이라 나옵니다. 연주회, 연극등의 편성표를 프로그램이라 하지요. 즉 순서대로 실행되는 일련의 작업 목록을 프로그램이라고 부릅니다.</p>

<p>그럼, 일반적으로 컴퓨터 프로그램은 어떻게 실행되지는지 살펴볼까요?</p>

<div class="language-php linenos highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="nx">foo</span><span class="p">();</span>

<span class="k">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">{</span> 
    <span class="k">echo</span> <span class="s1">'1'</span><span class="p">,</span> <span class="kc">PHP_EOL</span><span class="p">;</span>
    <span class="nx">bar</span><span class="p">();</span>
    <span class="k">echo</span> <span class="s1">'5'</span><span class="p">,</span> <span class="kc">PHP_EOL</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">bar</span><span class="p">()</span> <span class="p">{</span> 
    <span class="k">echo</span> <span class="s1">'2'</span><span class="p">,</span> <span class="kc">PHP_EOL</span><span class="p">;</span>
    <span class="nx">baz</span><span class="p">();</span>
    <span class="k">echo</span> <span class="s1">'4'</span><span class="p">,</span> <span class="kc">PHP_EOL</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">baz</span><span class="p">()</span> <span class="p">{</span> 
    <span class="k">echo</span> <span class="s1">'3'</span><span class="p">,</span> <span class="kc">PHP_EOL</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>실행 결과는 이렇습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>php main.php
1
2
3
4
5
</code></pre></div></div>

<ul>
  <li>3번 줄에서 <code class="highlighter-rouge">foo()</code> 함수를 호출합니다.</li>
  <li>6번 줄에서 “1”을 출력합니다.</li>
  <li>7번 줄에서 <code class="highlighter-rouge">bar()</code> 함수를 호출합니다.</li>
  <li>12번 줄에서 “2”를 출력합니다.</li>
  <li>13번 줄에서 <code class="highlighter-rouge">baz()</code> 함수를 호출합니다.</li>
  <li>18번 줄에서 “3”을 출력합니다.</li>
  <li>14번 줄에서 “4”를 출력합니다.</li>
  <li>8번 줄에서 “5”를 출력합니다.</li>
</ul>

<p>어렵지 않죠?</p>

<h2 id="2-예외-상황">2 예외 상황</h2>

<p><code class="highlighter-rouge">baz()</code> 함수에서 예외를 만들고 결과를 살펴보겠습니다.</p>

<div class="language-php linenos highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="nx">foo</span><span class="p">();</span>

<span class="k">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">{</span> 
    <span class="nx">bar</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">bar</span><span class="p">()</span> <span class="p">{</span> 
    <span class="nx">baz</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">baz</span><span class="p">()</span> <span class="p">{</span> 
    <span class="k">throw</span> <span class="k">new</span> <span class="nx">RuntimeException</span><span class="p">(</span><span class="s1">'런타임 예외가 발생했습니다'</span><span class="p">);</span>
    <span class="k">echo</span> <span class="s1">'이 라인은 출력되지 않습니다'</span><span class="p">;</span> 
<span class="p">}</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>php exception.php
PHP Fatal error:  Uncaught RuntimeException: 런타임 예외가 발생했습니다 <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/exception.php:14
Stack trace:
<span class="c">#0 /Users/appkr/workspace/stack-trace/php/exception.php(10): baz()</span>
<span class="c">#1 /Users/appkr/workspace/stack-trace/php/exception.php(6): bar()</span>
<span class="c">#2 /Users/appkr/workspace/stack-trace/php/exception.php(3): foo()</span>
<span class="c">#3 {main}</span>
  thrown <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/exception.php on line 14
</code></pre></div></div>

<p>스택 트레이스를 하나씩 뜯어 보겠습니다.</p>

<ul>
  <li>첫 줄을 통해 <code class="highlighter-rouge">/Users/appkr/workspace/stack-trace/php/exception.php</code> 파일의 14번 줄에서 <code class="highlighter-rouge">RuntimeException</code>이 발생했고, 메시지는 <code class="highlighter-rouge">런타임 예외가 발생했습니다</code>라는 사실을 알 수 있습니다.</li>
  <li>첫 줄에서 문제의 원인을 알 수 있다면 아래 내용은 읽을 필요가 없습니다.</li>
  <li>총 4 개의 스택 프레임이 잡혔는데, 시간 역순으로 기록되어 있습니다.</li>
  <li><code class="highlighter-rouge">#2 exception.php</code> 3번 줄에서 <code class="highlighter-rouge">foo()</code> 함수를 호출했네요.</li>
  <li><code class="highlighter-rouge">#1 exception.php</code> 6번 줄에서 <code class="highlighter-rouge">bar()</code> 함수를 호출했네요.</li>
  <li><code class="highlighter-rouge">#0 exception.php</code> 10번 줄에서 <code class="highlighter-rouge">baz()</code> 함수를 호출했네요.</li>
</ul>

<p>어떤가요, 1절에서 본 내용과 전혀 다르지 않죠?</p>

<h2 id="3-사용자-정의-예외-및-처리">3 사용자 정의 예외 및 처리</h2>

<p>시스템에서 제공하는 예외를 그대로 사용하기 보다는, 비즈니스에서 사용하는 보편 언어를 사용하여 의미를 담은 예외를 정의하여 던지는 것이 더 좋은 구현이라고 알려져있습니다. 아래 예제처럼요.</p>

<div class="language-php linenos highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nx">foo</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">RuntimeException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">throw</span> <span class="k">new</span> <span class="nx">CustomException</span><span class="p">(</span><span class="s1">'사용자 정의 예외가 발생했습니다'</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">CustomException</span> <span class="k">extends</span> <span class="nx">RuntimeException</span> <span class="p">{}</span>

<span class="k">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">{</span> 
    <span class="nx">bar</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">bar</span><span class="p">()</span> <span class="p">{</span> 
    <span class="nx">baz</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">baz</span><span class="p">()</span> <span class="p">{</span> 
    <span class="k">throw</span> <span class="k">new</span> <span class="nx">RuntimeException</span><span class="p">(</span><span class="s1">'런타임 예외가 발생했습니다'</span><span class="p">);</span>
    <span class="k">echo</span> <span class="s1">'이 라인은 출력되지 않습니다'</span><span class="p">;</span> 
<span class="p">}</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>php custom_exception.php
PHP Fatal error:  Uncaught CustomException: 사용자 정의 예외가 발생했습니다 <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/custom_exception.php:6
Stack trace:
<span class="c">#0 {main}</span>
  thrown <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/custom_exception.php on line 6
</code></pre></div></div>

<p>그런데 위 스택 트레이스는 문제를 일으킨 근본 원인(Root Cause)이 무엇인지 보이지 않는다는 문제가 있습니다.</p>

<p><code class="highlighter-rouge">catch</code> 블록에서 <code class="highlighter-rouge">CustomException</code>을 던질 때, 직전 예외를 생성자에 넣어 주는 것 만으로 쉽게 해결할 수 있습니다.</p>

<div class="language-php linenos highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nx">foo</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">RuntimeException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">throw</span> <span class="k">new</span> <span class="nx">CustomException</span><span class="p">(</span><span class="s1">'사용자 정의 예외가 발생했습니다'</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="nv">$e</span><span class="p">);</span>
<span class="p">}</span>
<span class="c1">// 생략</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>php handle_exception.php
PHP Fatal error:  Uncaught RuntimeException: 런타임 예외가 발생했습니다 <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/handle_exception.php:20
Stack trace:
<span class="c">#0 /Users/appkr/workspace/stack-trace/php/handle_exception.php(16): baz()</span>
<span class="c">#1 /Users/appkr/workspace/stack-trace/php/handle_exception.php(12): bar()</span>
<span class="c">#2 /Users/appkr/workspace/stack-trace/php/handle_exception.php(4): foo()</span>
<span class="c">#3 {main}</span>

Next CustomException: 사용자 정의 예외가 발생했습니다 <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/handle_exception.php:6
Stack trace:
<span class="c">#0 {main}</span>
  thrown <span class="k">in</span> /Users/appkr/workspace/stack-trace/php/handle_exception.php on line 6
</code></pre></div></div>

<h2 id="4-현실-세계">4 현실 세계</h2>

<p>현실 세계의 코드는 예제처럼 간단하지는 않습니다. 그럼에도 불구하고 다음 두 가지만 기억하면 디버깅할 때 도움이 됩니다.</p>

<ul>
  <li><strong>첫 줄</strong>을 잘 보라.</li>
  <li>첫 줄에서 힌트를 찾을 수 없을 때는, 전체 스택 트레이스를 따라가면서 <strong>내가 짠 코드</strong>에서 원인을 찾아라.</li>
</ul>

<p>현실 세계의 예제를 한번 볼까요? 라라벨 프레임워크를 사용하는 프로젝트에서 사용자 인증을 위해 JWT 발급했는데, 사용자가 블랙리스트에 등록된 JWT를 제출한 케이스입니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| <span class="nt">---------------------------------------</span><span class="o">&gt;</span> |
| GET /protected_resource                  |
| Authorization: Bearer ey..OE             |
|                                          |
| &lt;<span class="nt">---------------------------------------</span> |
| 401 Unauthorized                         |
| <span class="o">{</span>                                        |
|   <span class="s2">"error"</span>: <span class="s2">"UnauthorizedTokenException"</span>, |
|   <span class="s2">"message"</span>: <span class="s2">"Invalid token, please .."</span>  |
| <span class="o">}</span>                                        |
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># /var/www/html/storage/logs/laravel.log</span>
<span class="o">[</span>2019-03-09 23:10:02] local.NOTICE: Tymon<span class="se">\J</span>WTAuth<span class="se">\E</span>xceptions<span class="se">\T</span>okenBlacklistedException: The token has been blacklisted <span class="k">in</span> /var/www/html/vendor/tymon/jwt-auth/src/Manager.php:109
Stack trace:
<span class="c">#0 /var/www/html/vendor/tymon/jwt-auth/src/JWT.php(200): Tymon\JWTAuth\Manager-&gt;decode(Object(Tymon\JWTAuth\Token))</span>
<span class="c">#1 /var/www/html/vendor/tymon/jwt-auth/src/JWTAuth.php(64): Tymon\JWTAuth\JWT-&gt;getPayload()</span>
<span class="c">#2 /var/www/html/app/Http/Middleware/JWTAuthenticate.php(61): Tymon\JWTAuth\JWTAuth-&gt;authenticate()</span>
<span class="c">#3 /var/www/html/app/Http/Middleware/JWTAuthenticate.php(26): App\Http\Middleware\JWTAuthenticate-&gt;authenticate(Object(Illuminate\Http\Request))</span>
<span class="c">#4 [internal function]: App\Http\Middleware\JWTAuthenticate-&gt;handle(Object(Illuminate\Http\Request), Object(Closure))</span>
<span class="c">#...</span>
<span class="c">#51 {main}</span>

Next My<span class="se">\D</span>omain<span class="se">\A</span>uth<span class="se">\E</span>xceptions<span class="se">\U</span>nauthorizedTokenException: Invalid token, please sign <span class="k">in </span>again <span class="k">in</span> /var/www/html/app/Http/Middleware/JWTAuthenticate.php:66
Stack trace:
<span class="c">#0 /var/www/html/app/Http/Middleware/JWTAuthenticate.php(26): App\Http\Middleware\JWTAuthenticate-&gt;authenticate(Object(Illuminate\Http\Request))</span>
<span class="c">#...</span>
<span class="c">#48 {main}  {</span>
    <span class="s2">"app_version"</span>: <span class="s2">"UNKNOWN"</span>,
    <span class="s2">"instance_id"</span>: <span class="s2">"acb25dd1a048"</span>,
    <span class="s2">"transaction_id"</span>: <span class="s2">"766ffefe-ac00-47ef-bc68-4cd7553decea"</span>,
    <span class="s2">"trace_number"</span>: 0
<span class="o">}</span>
</code></pre></div></div>

<p>다음의 정보를 얻을 수 있습니다.</p>

<ul>
  <li>사용자가 제출한 JWT 토큰이 블랙리스트되서 발생한 <code class="highlighter-rouge">NOTICE</code> 레벨의 예외.</li>
  <li>블랙리스트 여부를 검사하고 예외를 던진 위치는 <code class="highlighter-rouge">/var/www/html/vendor/tymon/jwt-auth/src/Manager.php</code> 파일의 109 줄.</li>
  <li>예외가 발생시킨 함수는 <code class="highlighter-rouge">Tymon\JWTAuth\Manager::decode()</code>이며, 이 함수를 <code class="highlighter-rouge">/var/www/html/vendor/tymon/jwt-auth/src/JWT.php</code> 200 줄에서 호출.</li>
  <li><code class="highlighter-rouge">My\Domain\Auth\Exceptions\UnauthorizedTokenException</code> 라는 도메인 예외가 발생했고, (핸들링 로직에 따라) 사용자는 “Invalid token, please sign in again”라는 메시지를 담은 JSON 예외 응답을 받았을 것.</li>
</ul>

<!--more-->
<div class="spacer">• • •</div>

<h2 id="5-다른-프로그래밍-언어">5 다른 프로그래밍 언어</h2>

<h3 id="51-java">5.1 Java</h3>

<div class="language-java linenos highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">CustomException</span> <span class="kd">extends</span> <span class="nc">RuntimeException</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">CustomException</span><span class="o">(</span><span class="nc">String</span> <span class="n">message</span><span class="o">,</span> <span class="nc">Throwable</span> <span class="n">previous</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">message</span><span class="o">,</span> <span class="n">previous</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">main</span> <span class="o">{</span>
    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">foo</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">bar</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">bar</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">baz</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">baz</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">"런타임 예외가 발생했습니다"</span><span class="o">);</span>
        <span class="c1">// System.out.println("이 라인은 컴파일 오류를 일으킵니다");</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">foo</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">RuntimeException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">CustomException</span><span class="o">(</span><span class="s">"사용자 정의 예외가 발생했습니다"</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>javac main.java <span class="o">&amp;&amp;</span> java main
Exception <span class="k">in </span>thread <span class="s2">"main"</span> CustomException: 사용자 정의 예외가 발생했습니다
    at main.main<span class="o">(</span>main.java:25<span class="o">)</span>
Caused by: java.lang.RuntimeException: 런타임 예외가 발생했습니다
    at main.baz<span class="o">(</span>main.java:17<span class="o">)</span>
    at main.bar<span class="o">(</span>main.java:13<span class="o">)</span>
    at main.foo<span class="o">(</span>main.java:9<span class="o">)</span>
    at main.main<span class="o">(</span>main.java:23<span class="o">)</span>
</code></pre></div></div>

<p>예외의 근본원인을 <code class="highlighter-rouge">Caused by:</code> 로 표시하는 부분을 제외하면 거의 똑같습니다.</p>

<h3 id="52-ruby">5.2 Ruby</h3>

<div class="language-ruby linenos highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CustomError</span> <span class="o">&lt;</span> <span class="no">RuntimeError</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">foo</span><span class="p">()</span>
    <span class="n">bar</span><span class="p">()</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">bar</span><span class="p">()</span>
    <span class="n">baz</span><span class="p">()</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">baz</span><span class="p">()</span>
    <span class="k">raise</span> <span class="no">RuntimeError</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'런타임 예외가 발생했습니다'</span><span class="p">)</span>
    <span class="nb">p</span> <span class="s1">'이 라인은 출력되지 않습니다'</span>
<span class="k">end</span>

<span class="k">begin</span>
    <span class="n">foo</span><span class="p">()</span>    
<span class="k">rescue</span> 
    <span class="k">raise</span> <span class="no">CustomError</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'사용자 정의 예외가 발생했습니다'</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ruby main.rb
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  	3: from main.rb:18:in <span class="sb">`</span>&lt;main&gt;<span class="s1">'
  	2: from main.rb:5:in `foo'</span>
  	1: from main.rb:9:in <span class="sb">`</span>bar<span class="s1">'
main.rb:13:in `baz'</span>: 런타임 예외가 발생했습니다 <span class="o">(</span>RuntimeError<span class="o">)</span>
  	1: from main.rb:17:in <span class="sb">`</span>&lt;main&gt;<span class="s1">'
main.rb:20:in `rescue in &lt;main&gt;'</span>: 사용자 정의 예외가 발생했습니다 <span class="o">(</span>CustomError<span class="o">)</span>
</code></pre></div></div>

<p>크게 다르지 않습니다. 다만 시간 역순이 아니라 시간순으로 표현하고 있으며, 예외 메시지를 중간에 찍어 주고 있습니다.</p>
:ET