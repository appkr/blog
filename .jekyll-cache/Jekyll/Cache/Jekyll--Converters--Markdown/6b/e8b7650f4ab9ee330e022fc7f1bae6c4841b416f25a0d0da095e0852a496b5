I"e_<p>Wordpress 에서 Jekyll 로 마이그레이션 과정에서 배운 내용을 총 5 편의 포스트로 정리해 본다.</p>

<ol>
  <li><a href="/work-n-play/블로그-플랫폼-이전-1-개발자로서의-새로운-삶">개발자로서의 새로운 삶</a></li>
  <li><a href="/work-n-play/블로그-플랫폼-이전-2-goodbye-wordpress-hello-jekyll">Goodbye Wordpress, Hello Jekyll</a></li>
  <li><em>Publishing</em></li>
  <li><a href="/work-n-play/블로그-플랫폼-이전-4-build-automation-with-gulp">Build Automation with Gulp</a></li>
  <li><a href="/work-n-play/블로그-플랫폼-이전-5-disqus-facebook">Disqus &amp; Facebook</a></li>
</ol>

<p>지난 2 주일 동안 일어난 우여곡절들을 기억을 되살려 최대한 복기해 두었다.</p>

<div class="spacer">• • •</div>

<p>연초에 블로그 이전을 생각하며 여기 저기 눈팅하던 중 디자인 (<a href="//themeforest.net/item/globals-material-universal-psd-template/11932290">themeforest-Globals</a>) 하나가 눈에 들어왔다. 내용과 품질에 비해서 너무 저렴한 가격 $12. 지르지 않을 이유가 없었다.</p>

<p><a href="//s6.postimg.org/ejkibz8o1/01_header.png"><img src="//s6.postimg.org/ejkibz8o1/01_header.png" alt="themeforest-Globals" /></a></p>

<div class="spacer"></div>

<p>그런데, 구매한 후 다운로드하고 파일 압축을 풀고서야 알았다, “PSD 파일 밖에 없다는 것을”. 기존에 구매했던 관리자용 템플릿인 <a href="https://wrapbootstrap.com/theme/inspinia-responsive-admin-theme-WB0R5L90S">Inspina</a> 처럼, AngularJS, MEAN, RoR, .. 등 대부분의 플랫폼에 미리 포팅되어 동작하는 템플릿을 기대하고 있었던 것이다.</p>

<!--more-->

<h2 id="퍼블리싱">퍼블리싱</h2>

<p>이번에 디자이너와 코더라는 직종이 별도로 있는 지 처음 알았다. 요즘은 이 둘을 합쳐서 퍼블리셔라 한다고 들었다.</p>

<p>기존에 HTML, CSS Markup 은 많이 해 보았지만, 디자인을 그대로 옮긴 경험은 없었다. 이 바닥에서 먹고 살려면 어차피 익숙해져야 하는 일이니 이번에 퍼블리싱을 경험해 보자며 뛰어든 작업의 결과물이 이 블로그이다.</p>

<h2 id="layout--html-markup">Layout &amp; HTML Markup</h2>

<p>마스터 레이아웃이다. 앞서 SEO (==검색 엔진 최적화) 를 언급했는데, 그 중 일부가 여기에 포함되어 있다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://github.com/appkr/blog/blob/master/_layouts/default.html --&gt;</span>

<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">content=</span><span class="s">"{% if page.excerpt %}{{ page.excerpt | strip_html | strip_newlines | strip | truncate: 160 }}{% else %}{{ site.description }}{% endif %}"</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Facebook Meta --&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">property=</span><span class="s">"og:title"</span> <span class="na">content=</span><span class="s">"{% if page.title %}{{ page.title }}{% else %}{{ site.title }}{% endif %}"</span><span class="nt">/&gt;</span>
  <span class="c">&lt;!-- ... --&gt;</span>
  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"/styles/main.min.css"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/head&gt;</span>

<span class="nt">&lt;body</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
  {% include site-header.html %}
  {{ content }}
  {% include site-footer.html %}

  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"/scripts/main.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>위 마스터 레이아웃을 이용(상속)하는 뷰들은 아래 처럼 작성하였다. 아래는 대문 페이지의 일부~</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://github.com/appkr/blog/blob/master/index.html --&gt;</span>
---
layout: default # /_layouts/default.html 레이아웃을 상속한다는 의미임.
# 이하 HTML Markup 들은 모두 /_layouts/default.html 에 쓴 {{ content }} 영역에 렌더링 됨.
---
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"main"</span> <span class="na">class=</span><span class="s">"col-md-9"</span><span class="nt">&gt;</span>
    {% for post in paginator.posts %}
    <span class="nt">&lt;article</span> <span class="na">class=</span><span class="s">"box"</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- ... --&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"box-body"</span><span class="nt">&gt;</span>
        {{ post.content | split:'<span class="c">&lt;!--more--&gt;</span>' | first }}
      <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/article&gt;</span>
    {% endfor %}

    <span class="nt">&lt;nav</span> <span class="na">id=</span><span class="s">"pagination"</span><span class="nt">&gt;</span><span class="c">&lt;!-- ... --&gt;</span><span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>

  <span class="nt">&lt;aside</span> <span class="na">id=</span><span class="s">"sidebar"</span> <span class="na">class=</span><span class="s">"col-md-3"</span><span class="nt">&gt;</span>
    {% include site-sidebar.html %}
  <span class="nt">&lt;/aside&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>전체 레이아웃은 다음 그림과 같다. 레이아웃 맨 아래에 <code class="highlighter-rouge">_layouts/site-footer.html</code> 은 스크린샷에서 빠졌다.</p>

<p><a href="/images/2016-02-11-img-03.png"><img src="/images/2016-02-11-img-03.png" alt="" /></a></p>

<h2 id="bower">Bower</h2>

<p>3rd Party Front-end 패키지 관리를 위해 <a href="//bower.io/">Bower</a> 를 계속 이용해 왔다. 이 프로젝트에서 사용할 Assets 을 정의할 <code class="highlighter-rouge">bower.json</code> 과 Bower 설정을 저장할 <code class="highlighter-rouge">.bowerrc</code> 파일을 만들었다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bower init
<span class="nv">$ </span><span class="nb">touch</span> .bowerrc
</code></pre></div></div>

<p><a href="/work-n-play/블로그-플랫폼-이전-2-goodbye-wordpress-hello-jekyll/#structure-config">이전 포스트의 프로젝트 구조</a> 에서 정한 대로 Bower 가 끌고오는 Assets 들의 설치 디렉토리를 <code class="highlighter-rouge">_assets/vendor</code> 로 변경해 주었다. 기본값으로 두었을 때 사용되는 <code class="highlighter-rouge">bower_components</code> 는 Gulp Build 자동화할 때 불편하기 때문에…</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// https://github.com/appkr/blog/blob/master/.bowerrc</span>

<span class="p">{</span>
  <span class="dl">"</span><span class="s2">directory</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">_assets/vendor</span><span class="dl">"</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="덧">덧</h3>

<p><a href="https://gofore.com/ohjelmistokehitys/stop-using-bower/">Bower 를 쓰지 말고 Npm 을 쓰자</a>는 움직임이 있는데, 아직은 익숙한 툴이라 사용하고 있다. 주목하고 있어야 할 흐름 중 하나이다.</p>

<h2 id="styles">Styles</h2>

<p>UI 요소를 위해 FezVrasta 의 <a href="https://github.com/FezVrasta/bootstrap-material-design">Bootstrap Material Design</a> 을 적용하였다. 개발을 모두 종료하고 보니, 상단 네비게이션 요소, 검색 박스, 아이콘을 제외하고는 사용한 것이 없었다. (걷어 내야할까 고민 중…)</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bower <span class="nb">install </span>bootstrap-material-design <span class="nt">--save-dev</span>
</code></pre></div></div>

<p>Sass 보다는 Curly Brace(<code class="highlighter-rouge">{}</code>)를 사용하는 SCSS 문법을 선호한다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">//</span> <span class="nt">https</span><span class="o">://</span><span class="nt">github</span><span class="nc">.com</span><span class="o">/</span><span class="nt">appkr</span><span class="o">/</span><span class="nt">blog</span><span class="o">/</span><span class="nt">blob</span><span class="o">/</span><span class="nt">master</span><span class="o">/</span><span class="nt">_assets</span><span class="o">/</span><span class="nt">styles</span><span class="o">/</span><span class="nt">main</span><span class="nc">.scss</span>

<span class="k">@charset</span> <span class="s1">"utf-8"</span><span class="p">;</span>

<span class="k">@import</span> <span class="s1">"../vendor/bootstrap-sass/assets/stylesheets/bootstrap"</span><span class="p">;</span>
<span class="k">@import</span> <span class="s1">"../vendor/bootstrap-material-design/sass/bootstrap-material-design"</span><span class="p">;</span>
<span class="k">@import</span> <span class="s1">"../vendor/bootstrap-material-design/sass/ripples"</span><span class="p">;</span>

<span class="err">$</span><span class="nt">text-color</span><span class="o">:</span> <span class="nf">#9699a6</span><span class="o">;</span>
<span class="o">//</span> <span class="o">...</span>

<span class="nt">body</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="err">$</span><span class="n">text-color</span><span class="p">;</span>
  <span class="err">//</span> <span class="err">...</span>
<span class="p">}</span>

<span class="o">//</span> <span class="o">...</span>
</code></pre></div></div>

<h3 id="덧-1">덧</h3>

<p>Jekyll 은 Fenced Code Block 의 스타일링을 기본 지원한다. 이 프로젝트에서는 Jekyll 의 기본 값인 <code class="highlighter-rouge">Rouge</code> 를 이용하지 않고, 일부러 <a href="//pygments.org/"><code class="highlighter-rouge">Pygments</code></a> 를 이용하였다. <code class="highlighter-rouge">Pygments</code> 는 Python 으로 작성된 Syntax Highlighter 로, <code class="highlighter-rouge">Rouge</code> 보다 <a href="//pygments.org/languages/">더 많은 언어의 문법</a>을 지원하기 때문이다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pip <span class="nb">install </span>Pygments
<span class="nv">$ </span>gem <span class="nb">install </span>pygments.rb
</code></pre></div></div>

<p>여기까지 했다고 해서 Fenced Code Block 이 예쁘게 표시되는 것은 아니다. <code class="highlighter-rouge">Pygments</code> 의 역할은, 가령 <code class="highlighter-rouge">&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;</code> 처럼, 코드 영역에 class 를 덧 붙여주는 역할을 한다. 따라서, <code class="highlighter-rouge">Pygments</code> 에 호환되도록 스타일시트를 정의해 주어야 한다. 이 프로젝트에서는 <a href="https://github.com/appkr/blog/blob/master/_assets/styles/main.scss#L209">SETI Theme</a> 을 적용하였다.</p>

<h2 id="javascripts">Javascripts</h2>

<p>검색 기능을 부여하기 위해 <a href="https://github.com/christian-fei/Simple-Jekyll-Search">Simple-Jekyll-Search</a>를 이용하였다. 포스트에 포함된 이미지를 확대해서 Lightbox 로 보여 주기 위해 <a href="https://github.com/ashleydw/lightbox">Bootstrap 3 Lightbox</a> 도 가져왔다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bower <span class="nb">install </span>simple-jekyll-search ekko-lightbox <span class="nt">--save-dev</span>
</code></pre></div></div>

<h3 id="search">Search</h3>

<p>“데이터베이스를 사용하지 않는 정적 페이지인데 검색이 가능해?” 라고 반문하는 방문자가 있다면 당연한 일이다. 나도 그랬으니까… Simple-Jekyll-Search 의 동작 원리는 <code class="highlighter-rouge">search.json</code> 이란 파일에 사이트 전체의 인덱스를 미리 만들 수 있도록 Liquid 문법으로 써 놓고, Jekyll Build 때 인덱싱된 파일이 떨구어지도록 하는 식이다. <code class="highlighter-rouge">search.json</code> 이 생성되면 프로젝트를 배포할 때 같이 배포되며, Javascript 가 Ajax 요청으로 로컬에 위치한 전체 사이트 인덱스를 검색하고 결과를 뷰로 보여줄 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// https://github.com/appkr/blog/blob/master/search.json</span>

<span class="o">---</span>
<span class="o">---</span>
<span class="p">[</span>
  <span class="p">{</span><span class="o">%</span> <span class="k">for</span> <span class="nx">post</span> <span class="k">in</span> <span class="nx">site</span><span class="p">.</span><span class="nx">posts</span> <span class="o">%</span><span class="p">}</span>
  <span class="p">{</span>
    <span class="dl">"</span><span class="s2">title</span><span class="dl">"</span>    <span class="p">:</span> <span class="dl">"</span><span class="s2">{{ post.title | escape }}</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">category</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">{{ post.category }}</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">tags</span><span class="dl">"</span>     <span class="p">:</span> <span class="dl">"</span><span class="s2">{{ post.tags | join: ', ' }}</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">url</span><span class="dl">"</span>      <span class="p">:</span> <span class="dl">"</span><span class="s2">{{ site.baseurl }}{{ post.url }}</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">date</span><span class="dl">"</span>     <span class="p">:</span> <span class="dl">"</span><span class="s2">{{ post.date }}</span><span class="dl">"</span>
  <span class="p">}{</span><span class="o">%</span> <span class="nx">unless</span> <span class="nx">forloop</span><span class="p">.</span><span class="nx">last</span> <span class="o">%</span><span class="p">},{</span><span class="o">%</span> <span class="nx">endunless</span> <span class="o">%</span><span class="p">}</span>
  <span class="p">{</span><span class="o">%</span> <span class="nx">endfor</span> <span class="o">%</span><span class="p">}</span>
<span class="p">]</span>
</code></pre></div></div>

<p>검색 폼과 검색 결과를 보여줄 HTML Markup 을 준비하고,</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://github.com/appkr/blog/blob/master/_includes/site-sidebar.html#L3 --&gt;</span>

<span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"#"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">"form-control input-lg"</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"q"</span> <span class="na">placeholder=</span><span class="s">"Search..."</span><span class="nt">&gt;</span>
    <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">"q-results"</span><span class="nt">&gt;&lt;/ul&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/form&gt;</span>
<span class="c">&lt;!-- ... --&gt;</span>
</code></pre></div></div>

<p>Javascript 로 Symple-Jekyll-Search 를 구동하면 끝~</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// https://github.com/appkr/blog/blob/master/_assets/scripts/main.js#L141</span>

<span class="nx">SimpleJekyllSearch</span><span class="p">({</span>
  <span class="na">searchInput</span><span class="p">:</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">q</span><span class="dl">'</span><span class="p">),</span>
  <span class="na">resultsContainer</span><span class="p">:</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">q-results</span><span class="dl">'</span><span class="p">),</span>
  <span class="na">json</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/search.json</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">searchResultTemplate</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;li&gt;&lt;a href="{url}" title="{desc}"&gt;{title}&lt;/a&gt;&lt;/li&gt;</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">noResultsText</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;li class="text-warning"&gt;No results found&lt;/li&gt;</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">limit</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
  <span class="na">fuzzy</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="na">exclude</span><span class="p">:</span> <span class="p">[]</span>
<span class="p">});</span>
</code></pre></div></div>

<p><a href="/images/2016-02-11-img-01.png"><img src="/images/2016-02-11-img-01.png" alt="Search" /></a></p>

<h3 id="lightbox">Lightbox</h3>

<p>이미지를 클릭/터치했을 때 <a href="//getbootstrap.com/javascript/#modals">Modal</a> 로 보여 주는 기능이다. <a href="https://github.com/appkr/blog/blob/master/_assets/styles/main.scss#L590">스타일</a>은 약간만 수정해 주면 나머지는 Bootstrap 제공 스타일이 거의 그대로 사용된다. 기능 활성화를 위해 아래 Javascript 를 작성하였다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// https://github.com/appkr/blog/blob/master/_assets/scripts/main.js#L67</span>

<span class="kd">var</span> <span class="nx">imgObjects</span> <span class="o">=</span> <span class="nx">bodyContainer</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="dl">'</span><span class="s1">img</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">imgObjects</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
  <span class="nx">that</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-toggle</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">lightbox</span><span class="dl">'</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-title</span><span class="dl">'</span><span class="p">,</span> <span class="nx">that</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">alt</span><span class="dl">'</span><span class="p">));</span>
<span class="p">});</span>

<span class="nx">bodyContainer</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="dl">'</span><span class="s1">*[data-toggle="lightbox"]</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">ekkoLightbox</span><span class="p">();</span>
<span class="p">});</span>
</code></pre></div></div>

<p><a href="/images/2016-02-11-img-02.png"><img src="/images/2016-02-11-img-02.png" alt="Lightbox" /></a></p>

<div class="spacer">• • •</div>

<h2 id="삽질">삽질</h2>

<p>삽질은 개발자의 고유한 특징이다. 비 개발자는 그냥 ‘안되는구나~’ 라고 불평하며 다른 대안을 찾아 나서기 때문이다.</p>

<p>Twitter Boostrap (==twbs) 클래스들이 오버라이드될 줄 알았는데, 잘못된 가정이었다. 이번에 알게된 사실은 CSS 스타일 정의에서 가중치 또는 우선순위이다. HTML Element 에 부여된 id 는 100 점, class 는 10 점, tag 는 1 점 이라는 것이다. 가령 <code class="highlighter-rouge">blockquote  {...}</code> 는 1점인 반면, <code class="highlighter-rouge">#app blockquote {...}</code> 는 101 점. <code class="highlighter-rouge">blockquote {... !important}</code> 를 쓰는 것은 안티패턴이다. 해서 twbs 클래스를 오버라이드하는 가장 좋은 방법은 아래 처럼 id 를 이용하는 방법..</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://github.com/appkr/blog/blob/master/_layouts/default.html --&gt;</span>

<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="c">&lt;!-- ... --&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
<span class="c">&lt;!-- ... --&gt;</span>
</code></pre></div></div>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">//</span> <span class="nt">https</span><span class="o">://</span><span class="nt">github</span><span class="nc">.com</span><span class="o">/</span><span class="nt">appkr</span><span class="o">/</span><span class="nt">blog</span><span class="o">/</span><span class="nt">blob</span><span class="o">/</span><span class="nt">master</span><span class="o">/</span><span class="nt">_assets</span><span class="o">/</span><span class="nt">styles</span><span class="o">/</span><span class="nt">main</span><span class="nc">.scss</span>

<span class="nf">#app</span> <span class="p">{</span>
  <span class="err">blockquote</span> <span class="err">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="err">//</span> <span class="err">...</span>
  <span class="p">}</span>
<span class="err">}</span>
</code></pre></div></div>
:ET