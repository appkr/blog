I"X<blockquote>
  <p>고객 목록에 고객별 최근 주문 1건에 대한 요약 정보를 보여주세요.</p>
</blockquote>

<p>라는 요구사항이 있습니다.</p>

<p>“고객” 객체와 “주문” 객체간의 관계는 다음과 같습니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+------------+           0..* +------------+
|  Customer  | &lt;&gt;-----------&gt; |   Order    |
+------------+                +------------+
</code></pre></div></div>

<p>애플리케이션 레이어에서 구현한다면, ORM을 통해 구한 <code class="highlighter-rouge">Collection&lt;Customer&gt;</code>을 순회하면서, <code class="highlighter-rouge">Customer</code>객체의 멤버 필드인 <code class="highlighter-rouge">Collection&lt;Order&gt;</code>를 대상으로 최근 Order 객체만 필터링했거나, 적절한 순서로 정렬하여 뽑아 쓰기 쉽도록 했을겁니다. 요런 느낌으로요(검증 안된 Pseudo Code 입니다).</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Service Layer</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">listCustomers</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="nv">$customers</span><span class="o">-&gt;</span><span class="na">map</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nx">Customer</span> <span class="nv">$customer</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$sorted</span> <span class="o">=</span> <span class="nv">$customer</span><span class="o">-&gt;</span><span class="na">orders</span><span class="o">-&gt;</span><span class="na">sortByDesc</span><span class="p">(</span><span class="s1">'id'</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">values</span><span class="p">();</span>
        <span class="nv">$customer</span><span class="o">-&gt;</span><span class="na">setRelation</span><span class="p">(</span><span class="s1">'orders'</span><span class="p">,</span> <span class="nv">$sorted</span><span class="p">);</span>
        <span class="k">return</span> <span class="nv">$customer</span><span class="p">;</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="c1">// Controller/View 등</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$customers</span> <span class="k">as</span> <span class="nv">$customer</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$lastOrder</span> <span class="o">=</span> <span class="nv">$customer</span><span class="o">-&gt;</span><span class="na">orders</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
    <span class="nv">$lastOrder</span><span class="o">-&gt;</span><span class="na">order_number</span><span class="p">;</span> <span class="c1">// 최근 주문 번호   </span>
<span class="p">}</span>
</code></pre></div></div>

<p>문제점들이 눈에 띕니다.</p>

<ul>
  <li>시간복잡도는 O(m x n)입니다.</li>
  <li>CPU와 메모리를 혹사시킵니다.</li>
  <li><code class="highlighter-rouge">Customer.orders: Collection&lt;Order&gt;</code>를 미리 로드하지 않았다면, N + 1 문제가 발생합니다.</li>
  <li>이 외에도 제가 보지 못한 문제점들이 더 있을 겁니다…</li>
</ul>

<p>읽기 전용 쿼리이므로 ORM을 쓰지 않아도 됩니다. 싸고, 빠르고, 안전하게 SQL만으로 뽑아내는 방법을 찾아봤습니다.</p>

:ET