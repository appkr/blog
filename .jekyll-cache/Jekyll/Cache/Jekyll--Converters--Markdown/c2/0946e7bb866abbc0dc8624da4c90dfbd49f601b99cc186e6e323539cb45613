I"9&<p><img src="https://imgs.xkcd.com/comics/exploits_of_a_mom.png" alt="Exploit of a mom" />
<small>그림출처: <a href="https://xkcd.com/327/">Exploits of a Mom</a></small></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cut#1 (학교) 여기 학교인데요. 전화 드린 이유는, 학교에 컴퓨터 문제가 좀 있어서요.
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cut#2 (엄마) 우리 애가 사고쳤나요?
     (학교) 예... 일종의...
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cut#3 (학교) 그런데, 정말로 아들 이름을 "Robert'); DROP TABLE students;--" 로 지으신게 맞나요?
      (엄마) 예 맞아요. 그래서 집에서는 우리 애를 "리틀 바비 테이블"이라고 불러요.
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cut#4 (학교) ;;; 기뻐하실 지 모르겠지만, 학생 테이블의 레코드 전체를 잃어 버렸어요.
      (엄마) 적어도 이번 사건 덕분에 DB에 입력할 값을 잘 필터링 해야 한다는 사실 정도는 배우셨겠군요~
</code></pre></div></div>

<div class="spacer">• • •</div>

<p>프레임웍을 쓰면 쉽게 안전성을 확보할 수 있는데요. 그럼에도 불구하고, 아래 코드의 <code class="highlighter-rouge">queryStoresByParams()</code> 함수처럼 Raw 쿼리를 써야 할 때가 있죠. 이 때 SQL Injection을 당하지 않도록 주의해야 합니다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span> <span class="c1">// 회사 코드에서 일부 발췌</span>

<span class="kd">class</span> <span class="nc">StoreRetriever</span>
<span class="p">{</span>
    <span class="c1">// 라라벨 프레임웍이 제공하는 엘로퀀트 ORM과 쿼리 빌더를 이용하는 경우</span>
    <span class="c1">// PDO와 Prepared Statement를 이용하므로 SQL Injection은 자동 방어됨</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">retrieveStoresByParams</span><span class="p">(</span><span class="nx">StoreSearchParamDto</span> <span class="nv">$dto</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$eagerLoads</span> <span class="o">=</span> <span class="p">[])</span>
    <span class="p">{</span>
        <span class="nv">$builder</span> <span class="o">=</span> <span class="o">!</span><span class="nb">empty</span><span class="p">(</span><span class="nv">$eagerLoads</span><span class="p">)</span>
            <span class="o">?</span> <span class="nx">Store</span><span class="o">::</span><span class="na">query</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">with</span><span class="p">(</span><span class="nv">$eagerLoads</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">'stores.*'</span><span class="p">)</span>
            <span class="o">:</span> <span class="nx">Store</span><span class="o">::</span><span class="na">query</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">'stores.*'</span><span class="p">);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">applySearchParams</span><span class="p">(</span><span class="nv">$builder</span><span class="p">,</span> <span class="nv">$dto</span><span class="p">);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">applyOrderBy</span><span class="p">(</span><span class="nv">$builder</span><span class="p">,</span> <span class="nv">$dto</span><span class="p">);</span>

        <span class="k">return</span> <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">paginate</span><span class="p">(</span><span class="nv">$dto</span><span class="o">-&gt;</span><span class="na">getSize</span><span class="p">(),</span> <span class="p">[</span><span class="s1">'*'</span><span class="p">],</span> <span class="s1">'page'</span><span class="p">,</span> <span class="nv">$dto</span><span class="o">-&gt;</span><span class="na">getPage</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="c1">// Raw 쿼리를 쓸 때 사용자로부터 받은 문자열을 직접 쿼리에 끼워 넣으면 SQL Injection에 무방비 상태가 됨</span>
    <span class="c1">// e.g. $query[] = "and stores.created_at &gt;= {$from}";</span>
    <span class="c1">//</span>
    <span class="c1">// 여기서 Raw 쿼리를 왜 썼는가? "성능". 소위 말하는 "Query Model"</span>
    <span class="c1">// PHP7 with Xdebug on Docker, 테이블 조인 5개 &amp; 12,000 레코드 조회시 API 응답 시간</span>
    <span class="c1">// 	 - retrieveStoresByParams(): around N sec </span>
    <span class="c1">//   - queryStoresByParams(): under N/10 sec</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">queryStoresByParams</span><span class="p">(</span><span class="nx">StoreSearchParamDto</span> <span class="nv">$dto</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'stores.*'</span><span class="p">])</span>
    <span class="p">{</span>
        <span class="nv">$columnString</span> <span class="o">=</span> <span class="nb">implode</span><span class="p">(</span><span class="s1">','</span><span class="p">,</span> <span class="nv">$columns</span><span class="p">);</span>
        <span class="nv">$query</span><span class="p">[]</span> <span class="o">=</span> <span class="s2">"select </span><span class="si">{</span><span class="nv">$columnString</span><span class="si">}</span><span class="s2"> from stores"</span><span class="p">;</span>
        <span class="nv">$bindings</span> <span class="o">=</span> <span class="p">[];</span>

        <span class="nv">$query</span><span class="p">[]</span> <span class="o">=</span> <span class="s2">"where 1 = 1"</span><span class="p">;</span>

        <span class="nv">$from</span> <span class="o">=</span> <span class="nv">$dto</span><span class="o">-&gt;</span><span class="na">getFrom</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$from</span> <span class="o">!==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$query</span><span class="p">[]</span> <span class="o">=</span> <span class="s2">"and stores.created_at &gt;= :from"</span><span class="p">;</span>
            <span class="nv">$bindings</span><span class="p">[</span><span class="s1">'from'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$from</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// ...</span>

        <span class="k">return</span> <span class="nx">\DB</span><span class="o">::</span><span class="na">select</span><span class="p">(</span><span class="nb">implode</span><span class="p">(</span><span class="s1">' '</span><span class="p">,</span> <span class="nv">$query</span><span class="p">),</span> <span class="nv">$bindings</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">function</span> <span class="nf">applySearchParams</span><span class="p">(</span><span class="nx">Builder</span> <span class="nv">$builder</span><span class="p">,</span> <span class="nx">StoreSearchParamDto</span> <span class="nv">$dto</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$from</span> <span class="o">=</span> <span class="nv">$dto</span><span class="o">-&gt;</span><span class="na">getFrom</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$from</span> <span class="o">!==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">'stores.created_at'</span><span class="p">,</span> <span class="s1">'&gt;='</span><span class="p">,</span> <span class="nv">$from</span><span class="p">);</span>
        <span class="p">}</span>
    
        <span class="c1">// ...</span>
    <span class="p">}</span>
    
    <span class="k">private</span> <span class="k">function</span> <span class="nf">applyOrderBy</span><span class="p">(</span><span class="nx">Builder</span> <span class="nv">$builder</span><span class="p">,</span> <span class="nx">StoreSearchParamDto</span> <span class="nv">$dto</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$dto</span><span class="o">-&gt;</span><span class="na">getOrderBy</span><span class="p">()</span> <span class="k">as</span> <span class="nv">$order</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="nv">$order</span><span class="p">[</span><span class="s1">'sortKey'</span><span class="p">],</span> <span class="nv">$order</span><span class="p">[</span><span class="s1">'sortDirection'</span><span class="p">]);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET