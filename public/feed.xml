<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Appkr.memo(new Life)</title>
    <description>appkr's blog to record day-to-day life &amp; thoughts.</description>
    <link>http://blog.appkr.kr/</link>
    <atom:link href="http://blog.appkr.kr/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 24 Jun 2018 23:01:39 +0900</pubDate>
    <lastBuildDate>Sun, 24 Jun 2018 23:01:39 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>이진수와 십진수</title>
        <description>&lt;p&gt;중학교 때 배운 후, 잊어 버리고, 매번 필요할 때마다 찾아 보는 것이 진법(進法)이다. 요즘은 교과 과정이 없어졌다고 하지만, 자녀들이 물어볼 때를 대비해 기록해 놓는다. 또, 개발자로서 이진법을 잘 이해하지 못하고 있는 나 자신이 부끄럽기도해서 필요할 때마다 꺼내볼 수 있도록 치트시트를 만들어 두는 거다.&lt;/p&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;h2 id=&quot;십진수-to-이진수-decimal-to-binary&quot;&gt;십진수 to 이진수 (decimal to binary)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;주어진 십진수를 2로 계속 나누어 몫을 기록한다. 나누어 지지 않는 나머지 1은 버린다.&lt;/li&gt;
  &lt;li&gt;몫의 끝자리 수가 짝수이면 0, 홀수이면 1로 표시한다.&lt;/li&gt;
  &lt;li&gt;뒤에서 앞으로 0과 1을 조합한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;684, 342, 171, 85, 42, 21, 10, 5, 2, 1
  0,   0,   1,  1,  0,  1,  0, 1, 0, 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;십진수 684는 이진수로 1010101100 이다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; bin&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;684&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'0b1010101100'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;이진수-to-십진수-binary-to-decimal&quot;&gt;이진수 to 십진수 (binary to decimal)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;이진수의 자릿수를 구한다. 자릿수는 0부터 시작한다.&lt;/li&gt;
  &lt;li&gt;이진수의 값이 1일때만, 2에 자릿수만큼 제곱근한다.&lt;/li&gt;
  &lt;li&gt;전체를 더한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;자릿수 9 8 7 6 5 4 3 2 1 0
이진수 1 0 1 0 1 0 1 1 0 0

2^9 + 2^7 + 2^5 + 2^3 + 2^2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 684 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; int&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0b1010101100&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
684
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 14 Apr 2018 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/cheatsheet/binary-decimal-conversion/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/cheatsheet/binary-decimal-conversion/</guid>
        
        <category>수학</category>
        
        <category>개발자</category>
        
        
        <category>cheatsheet</category>
        
      </item>
    
      <item>
        <title>PHP 프로젝트에 Swagger 적용 #1</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2017-12-24-img-01_swagger-logo.png&quot; style=&quot;width:200px&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;text-center&quot;&gt;
  &lt;p class=&quot;text-muted&quot;&gt;PHP 기반 API 서버 프로젝트에 스웨거(Swagger)를 적용할 수 있을까?&lt;/p&gt;
  &lt;p class=&quot;lead&quot;&gt;&lt;strong&gt;예, 적용할 수 있습니다. 예제를 짜서 검증했습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;이 포스트를 쓰기 위한 예제를 진행하면서 스웨거가 해결하고자 했던 문제점을 좀 더 깊이 있게 생각해보는 계기가 되었습니다. 이 시리즈에서는 다음 내용을 다루려고 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;스웨거란 무엇이며, 왜, 언제 쓰는가?&lt;/li&gt;
  &lt;li&gt;PHP 기반 API 서버 프로젝트에 스웨거를 어떻게 적용해야 하는가?&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;네이버 국어사전에 따르면 &lt;strong&gt;찍새&lt;/strong&gt;와 &lt;strong&gt;딱새&lt;/strong&gt;를 이렇게 정의하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://krdic.naver.com/detail.nhn?docid=36508000&quot;&gt;찍새&lt;/a&gt;&lt;/strong&gt; 닦을 구두를 모아서 구두닦이에게 가져다주는 일만 하는 사람을 속되게 이르는 말.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://krdic.naver.com/detail.nhn?docid=11120600&quot;&gt;딱새&lt;/a&gt;&lt;/strong&gt; 은어로, ‘구두닦이’를 이르는 말.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예~ 구두닦이 서비스를 말하는 겁니다. 주제와 전혀 다른 구두닦이 서비스를 언급한 이유는, 제가 속한 회사의 서비스가 이런 식으로 역할 분담이 되어 있기 때문입니다. 상점으로부터 배송 대행 요청을 접수 받는 서비스와(이하 &lt;strong&gt;프라임&lt;/strong&gt;), 기사님들에게 배송 대행 업무를 나누어 주고, 배정 받은 기사님이 물건을 보내고자하는 상점으로 가서 물건을 픽업하고 목적지까지 배송하고 상품가액과 수수료를 결재 받는 서비스(이하 &lt;strong&gt;부릉&lt;/strong&gt;)로 구성되어 있습니다. 아무리 구두닦이 장인들이 모여 있더라도 구두를 찍어 오지 못하면 서비스는 쪼그라들겁니다. 반면에, 영업의 신들이 구두를 아무리 잘 찍어와도 구두를 깨끗이 닦지 못하면 손님은 다시 찾아오지 않을 겁니다. 결국 &lt;strong&gt;둘 간에 강한 결합이 존재하며, 서로 선순환을 일으켜야 한다&lt;/strong&gt;는 사실을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;참고로 &lt;strong&gt;프라임&lt;/strong&gt; 서비스는 라라벨 서버, 닷넷 및 Android 클라이언트로 구성되어 있습니다. &lt;strong&gt;부릉&lt;/strong&gt; 서비스는 스프링 서버, 닷넷 및 Android 클라이언트로 구성되어 있습니다. 두 서비스를 전부 관리하는 관리도구는 자바스크립트 SPA &lt;sub class=&quot;text-muted&quot;&gt;SINGLE PAGE APPLICATION&lt;/sub&gt;로 구성되어 있습니다.&lt;/p&gt;

&lt;p&gt;이 포스트와 관련해서 &lt;strong&gt;중요한 사실은 프라임도 부릉에게는 일개 클라이언트라는 점&lt;/strong&gt;입니다. 부릉은 멀티 클라이언트 플랫폼에 대응하기 위해 스웨거 API 스펙을 관리하고 있고, 프라임은 부릉이 노출하고 있는 API를 사용하기 위해서 스웨거 스펙으로 자동 생성한 PHP 클라이언트 라이브러리를 컴포저로 땡겨서 &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor&lt;/code&gt;에 꽂아서 사용합니다. 저는 프라임 서버 개발자입니다. 지난 일년간을 스웨거 스펙의 소비자이기만 하다가, 최근에 갑자기 &lt;em&gt;‘PHP로 짠 서버 프로젝트가 스웨거 API의 생산자가 될 수 있을까?’&lt;/em&gt;라는 생각이 들기 시작했습니다.&lt;/p&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://swagger.io/&quot;&gt;스웨거(Swagger)&lt;/a&gt;의 본질은 API 문서&lt;/strong&gt;입니다. 스웨거 스펙, 스웨거 문서, API 스펙, API 문서 등으로 다양한 이름으로 불립니다. 여기서 말하는 API는 Web API입니다.&lt;/p&gt;

&lt;p&gt;흔히 API 문서라고하면, 설계의 일부이거나, 설계를 실현한 코드가 제공하는 기능을 사람이 이해할 수 있도록 정리한 문서라고 생각하기 쉽습니다. 그런데 스웨거에서는 &lt;strong&gt;사람과 컴퓨터 모두가 읽고 이해할 수 있는 문서&lt;/strong&gt;를 의미합니다. 스웨거 스펙을 구심점으로 작동하는, 아래에 나열한 주요 도구들을 보면, 이 말이 무슨 뜻인지 감을 잡을 수 있을 겁니다.&lt;/p&gt;

&lt;h2 id=&quot;1-도구-세트&quot;&gt;1. 도구 세트&lt;/h2&gt;

&lt;h3 id=&quot;11-swagger-editor&quot;&gt;1.1. Swagger Editor&lt;/h3&gt;

&lt;p&gt;웹 UI에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;yml&lt;/code&gt; 형식으로 스웨거 스펙을 직접 작성하거나, 미리 작성한 스펙을 불러와서 수정할 수 있는 편집기입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017-12-24-img-02-swagger-editor.png&quot;&gt;&lt;img src=&quot;/images/2017-12-24-img-02-swagger-editor.png&quot; alt=&quot;Swagger Editor&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-swagger-ui&quot;&gt;1.2. Swagger UI&lt;/h3&gt;

&lt;p&gt;컴퓨터가 이해한 스웨거 스펙을 개발자(==사람)가 이해할 수 있도록 UI로 표현해 줍니다. 요청과 응답 스펙을 나열해 놓은 단순 문서에 그치지 않고, 각 API를 실제로 요청해 볼 수 있습니다. 개발자들은 이 UI를 이용해서 테스트 데이터를 만든다거나, 자신이 개발하는 애플리케이션에서 보낸 요청의 정상 처리 여부 등을 조회해 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017-12-24-img-03-swagger-ui.png&quot;&gt;&lt;img src=&quot;/images/2017-12-24-img-03-swagger-ui.png&quot; alt=&quot;Swagger UI&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;13-swagger-codegen&quot;&gt;1.3. Swagger Codegen&lt;/h3&gt;

&lt;p&gt;스웨거 스펙을 기반으로 서버 또는 클라이언트 SDK(=~ 라이브러리 + 문서 등)를 만들어 줍니다. 즉, 스펙만 있으면 서버 또는 클라이언트 코드를 뚝딱 만들고, 복붙 또는 의존성 관리자로 끼워 넣어서 서비스를 빠르게 개발 할 수 있도록 도와줍니다. 이 도구가 지원하는 플랫폼 목록은 아래와 같습니다. 목록에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;lumen&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php-symfony&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php-silex&lt;/code&gt; 찾으셨나요?&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;swagger-codegen version
&lt;span class=&quot;c&quot;&gt;# 2.3.0-SNAPSHOT&lt;/span&gt;
~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;swagger-codegen langs
&lt;span class=&quot;c&quot;&gt;# 모르는 플랫폼은 생략&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Available languages: [..., akka-scala, android, apache2, bash, csharp, clojure, csharp-dotnet2, dart, elixir, eiffel, erlang-client, erlang-server, python-flask, go, go-server, groovy, haskell-http-client, haskell, jmeter, java, java-play-framework, javascript, javascript-closure-angular, kotlin, lua, lumen, nodejs-server, perl, php, php-symfony, powershell, python, qt5cpp, rails5, ruby, rust, rust-server, scala, scala-lagom-server, php-silex, sinatra, slim, spring, html, swagger, swagger-yaml, swift4, swift3, swift, tizen, typescript-angular, typescript-angularjs, typescript-fetch, typescript-jquery, typescript-node, ...]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;14-postman-등-서드파티-도구&quot;&gt;1.4. Postman 등 서드파티 도구&lt;/h3&gt;

&lt;p&gt;스웨거 스펙은 RAML, API Blueprint 등 초기의 API 문서 표준들과 협력하면서도 서로 경쟁하는 관계였으나, 리눅스 재단의 후원을 받으면서 &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification&quot;&gt;OpenAPI Specification&lt;/a&gt;으로 이름을 바꾸었고, 지금의 사실상 업계 표준(&lt;em&gt;de facto&lt;/em&gt;)으로 통용되고 있습니다. 당연히 Postman과 같은 여러 서드파티 도구들도 스웨거 스펙을 지원하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017-12-24-img-04-postman.png&quot;&gt;&lt;img src=&quot;/images/2017-12-24-img-04-postman.png&quot; alt=&quot;Postman&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/2017-12-24-img-05-postman.png&quot;&gt;&lt;img src=&quot;/images/2017-12-24-img-05-postman.png&quot; alt=&quot;Postman&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-워크플로우&quot;&gt;2. 워크플로우&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/images/2017-12-24-img-06-workflow.png&quot;&gt;&lt;img src=&quot;/images/2017-12-24-img-06-workflow.png&quot; alt=&quot;Swagger Workflow&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;&lt;small class=&quot;text-muted&quot;&gt;아이고.. 그림이 약간 틀렸는데, 이해하는데 큰 지장이 없어서 그냥 둘게요~&lt;/small&gt;&lt;/p&gt;

&lt;h3 id=&quot;21-스웨거-스펙-작성&quot;&gt;2.1. 스웨거 스펙 작성&lt;/h3&gt;

&lt;p&gt;스웨거 스펙 정의 언어(IDL &lt;sub class=&quot;text-muted&quot;&gt;INTERFACE DEFINITION LANGUAGE&lt;/sub&gt;) 문법을 익혀, Swagger Editor에서 직접 작성하면 됩니다. 또 하나의 방법은 API 서버 프로젝트에 특별한 패키지를 설치하고, 코드에서 Annotation으로 API 문서를 쓴 후, Annotation을 스웨거 스펙으로 변경하는 특별한 명령을 실행하는 방법입니다.&lt;/p&gt;

&lt;p&gt;직접 쓰는 방법은 코드와 문서가 서로 따로 관리되어 문서가 코드의 최신 내용을 정확히 반영하지 못한다거나, 또는 반대의 경우가 발생할 소지가 큽니다. 반면, Annotation 등을 이용하는 방법은 코드와 문서가 같이 존재하므로 앞서 지적한 문제는 덜하겠지만, Annotation 문법을 익혀야 하며, 자칫 코드가 완성되기 전에 API 문서를 공개하지 못하는 함정에 빠지기 쉽습니다.&lt;/p&gt;

&lt;p&gt;API는 약속입니다. 두 모듈을 개발하는 개발자들, 즉 서버와 클라이언트 개발자들이 미리 정의한 약속에 따라 개발을 한다면, 어느 한 쪽의 모듈 개발이 끝날 때까지 다른 모듈 개발자가 기다려야 하는 것이 아니라, 약속에 맞추어서 병렬로 개발할 수 있습니다. 인터페이스가 변경되지 않는 한, 상호 독립적으로 개발하고, 상호 독립적으로 빌드/패키징하고, 상호 독립적으로 배포할 수 있습니다.&lt;/p&gt;

&lt;p&gt;정리하자면, 후자를 택한다 해도, API 서버 프로젝트의 HTTP 컨트롤러에서 더미 응답을 제공하는 최소 수준만 코드 작업하고, Annotation을 써서 빠르게 클라이언트 API를 정의할 수 있습니다. 나중에 약간의 변경이 생기더라도, 약속을 빨리 정하는 것이 개발 기간, 품질, 팀웍 모든 면에서 낫다는 점을 경험으로 배웠습니다. 스웨거는 과거의 “Code first” 개발 방식이 아니라, “Document first and generate boilerplate”, 즉 RAD &lt;sub class=&quot;text-muted&quot;&gt;RAPID APPLICATION DEVELOPMENT&lt;/sub&gt;를 추구하는 현대적인 애플리케이션 개발 방식을 담고 있습니다.&lt;/p&gt;

&lt;p&gt;자바 스프링에서만 가능한 스웨거 스펙을 생성하는 또 하나의 방법이 있는데요. &lt;a href=&quot;https://github.com/springfox/springfox&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;springfox/springfox&lt;/code&gt;&lt;/a&gt;를 의존성으로 포함하고, 빌드할 때 스웨거 스펙을 자동으로 생성되게 하는 방법입니다. 패키지가 컨트롤러를 해석해서 작동하므로 Annotation도 필요없습니다. 다른 언어 프레임워크에서 유사한 패키지를 아직 찾거나 듣지는 못했습니다.&lt;/p&gt;

&lt;h3 id=&quot;22-sdk-생성&quot;&gt;2.2. SDK 생성&lt;/h3&gt;

&lt;p&gt;현재 최신 버전은 2.3.0 입니다. OSX에서는 홈브루를 이용해서 쉽게 설치할 수 있습니다. 아래는 PHP 클라이언트 SDK를 생성하는 명령의 예입니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/sdk-project &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;swagger-codegen &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;generate
~/sdk-project &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;swagger-codegen generate &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--lang&lt;/span&gt; php &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--input-spec&lt;/span&gt; http://localhost/docs/swagger.json &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래와 같은 SDK를 생성해줍니다. API 클라이언트(Guzzle Wrapper), 모델 클래스, 테스트 보일러플레이트, 마크다운으로 된 API 문서 등이 포함되어 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/sdk-project &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── README.md
├── composer.json
├── docs                          &lt;span class=&quot;c&quot;&gt;# 마크다운으로 된 API 문서&lt;/span&gt;
│   ├── Api
│   └── Model
├── src 
│   ├── ApiException.php          &lt;span class=&quot;c&quot;&gt;# 최상위 예외 클래스&lt;/span&gt;
│   ├── Configuration.php         &lt;span class=&quot;c&quot;&gt;# 설정 주입용 컨테이너 클래스&lt;/span&gt;
│   ├── HeaderSelector.php
│   ├── ObjectSerializer.php      &lt;span class=&quot;c&quot;&gt;# Json String &amp;lt;=&amp;gt; PHP Object&lt;/span&gt;
│   ├── Model                     &lt;span class=&quot;c&quot;&gt;# 모델 클래스&lt;/span&gt;
│   │   ├── AccessToken.php
│   │   ├── ...
│   │   └── UserDto.php
│   └── Service                   &lt;span class=&quot;c&quot;&gt;# API 클래스 (Guzzle Wrapper)&lt;/span&gt;
│       ├── AuthApi.php
│       ├── ProductApi.php
│       └── ReviewApi.php
└── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;                          &lt;span class=&quot;c&quot;&gt;# 테스트 보일러플레이트&lt;/span&gt;
    ├── Api
    └── Model

9 directories, 63 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;일반적으로 서버 개발자의 역할은 스웨거 스펙을 제공하는 일까지 입니다. 해서 보통 API 서버 프로젝트에 Swagger UI 프로젝트도 같이 구동해서 UI 및 스펙 JSON을 서비스 합니다. 공개된 스웨거 스펙을 이용해서 자신의 프로젝트에서 사용할 언어별 SDK를 생성하고 관리하는 일은 클라이언트 개발자의 역할입니다.&lt;/p&gt;

&lt;p&gt;필자가 참여하는 프라임 서버는 스웨거를 사용하지 않고, 클라이언트가 서버에 저수준 REST API를 직접 호출합니다. 특히, 타입이 엄격하지 않던 JS 클라이언트와 서버 사이에 엄격한 타입 시스템을 가진 프록시 애플리케이션이 들어가면서, 요청/응답 모델의 데이터 타입 문제들이 심심찮게 발견되고 있습니다. 스웨거를 사용한다면, API 스펙에 의해 클라이언트 코드가 생성되며, 생성된 클라이언트는 서버와 실제 통신을 하게 되므로, 앞 절에서 말한 코드와 문서가 따로 노는 일은 사실상 발생할 수 없습니다.&lt;/p&gt;

&lt;h3 id=&quot;23-라이브러리-설치-및-코드-작성&quot;&gt;2.3. 라이브러리 설치 및 코드 작성&lt;/h3&gt;

&lt;p&gt;앞 절에서 생성된 라이브러리는 컴포저를 이용해서 API 클라이언트 프로젝트에 끼워 넣습니다. 물론, 정석은 아니지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor&lt;/code&gt; 폴더에 직접 복붙해도됩니다.&lt;/p&gt;

&lt;p&gt;PHP에서 API 클라이언트를 개발한다면 보통 Guzzle을 이용해서 API 엔드포인트로 HTTP 요청을 보내고 응답을 받아서 처리하는 식으로 프로그래밍할 겁니다. 스웨거가 생성한 클라이언트 코드는 Guzzle를 한번 더 감싸놓은 형태로서, 저수준 REST 호출이 아닌, PHP 함수 호출로 API를 소비할 수 있도록 해 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/appkr/swagger-api-client-poc/blob/master/tests/AuthApiTest.php#L57&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AuthApiTest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SwaggerPocApiTester&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testMe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$authorizationString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAuthString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// 전통적으로 많이 쓰던&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// GuzzleClient::get('auth/me', [&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//     'Authorization' =&amp;gt; &quot;Bearer {$authorizationString}&quot;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// ]); 이 아니라,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// &lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// AuthApi::me(string $authorizationString): UserDto;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 라는 시그니처의 함수를 호출했습니다.&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$me&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAuthApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$authorizationString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertInstanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserDto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;스크롤이 많이 내려가서, PHP 기반 API 서버 프로젝트에 스웨거를 적용하는 예제 프로젝트에 대한 설명은 다음 포스트에 이어가도록 하겠습니다.&lt;/p&gt;

&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;예제 프로젝트는 미리 공개합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;API 서버 프로젝트(Laravel+Annotation+Swagger UI)&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://github.com/appkr/db-lock-poc&quot;&gt;https://github.com/appkr/db-lock-poc&lt;/a&gt;&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;API 클라이언트 라이브러리(Swagger Generated PHP/JS/Java API Client)&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://github.com/appkr/swagger-poc-api&quot;&gt;https://github.com/appkr/swagger-poc-api&lt;/a&gt;&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;PHP API 클라이언트 예제 프로젝트(Lumen)&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://github.com/appkr/swagger-api-client-poc&quot;&gt;https://github.com/appkr/swagger-api-client-poc&lt;/a&gt;&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 24 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/work-n-play/learn-n-think/serving-swagger-api-in-php-project/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/work-n-play/learn-n-think/serving-swagger-api-in-php-project/</guid>
        
        <category>Swagger</category>
        
        <category>API</category>
        
        <category>PHP</category>
        
        
        <category>work-n-play</category>
        
        <category>learn-n-think</category>
        
      </item>
    
      <item>
        <title>클린코드와 리팩토링</title>
        <description>&lt;p&gt;&lt;strong&gt;MVP&lt;sub&gt;Minimum Viable Product&lt;/sub&gt;&lt;/strong&gt;로 개발한 서비스는 시장성 및 사업성이 검증되면 버리고 다시 짜야 합니다. MVP는 &lt;strong&gt;“더럽지만, 신속하게, 작동하는 서비스를 확보한다”&lt;/strong&gt;는게 가치이기 때문입니다. 사업 모델이 검증되면, 투자를 받고 사람을 뽑아서 오랫동안 유지할 코드 베이스, 성장을 이끌어 낼 수 있는 코드 베이스를 확보해야 합니다. 대부분의 스타트업들이 이 타이밍을 놓치고 있고, 제가 속한 회사도 예외는 아닙니다.&lt;/p&gt;

&lt;p&gt;본문의 예제를 보기전에 예제 코드가 쓰이는 사업 이해를 위해 간단히 설명을 드립니다.&lt;/p&gt;

&lt;p&gt;(회사의 공식 입장이 아닌, 직원으로서 나름의 생각입니다) 우리 회사는 현재 &lt;strong&gt;“이륜차 네트워크를 이용한 근거리 배송 대행 서비스”&lt;/strong&gt;를 업으로 하고 있으며, 사업 모델(= 서비스 모델 + 비즈니스 모델)은 다음과 같습니다.&lt;/p&gt;

&lt;h4 id=&quot;서비스-모델&quot;&gt;서비스 모델&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;출발지 A 지점에서 도착지 B 지점으로 소형 화물을 이동시킨다.&lt;/li&gt;
  &lt;li&gt;A ~ B간의 거리는 일반적으로 3Km 이내이며,&lt;/li&gt;
  &lt;li&gt;이동 수단으로 이륜차를 이용하고,&lt;/li&gt;
  &lt;li&gt;서비스를 위해 IT 기술을 이용한다.&lt;/li&gt;
  &lt;li&gt;화물 운송은 대체로 40분 이내에 끝난다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;비즈니스-모델&quot;&gt;비즈니스 모델&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;화물 운송 니즈가 있는 S 화주에게 배송 대행 수수료를 받아, 실제로 물건을 이동시키는 K 기사에게 비용을 지불하고 마진을 챙긴다.&lt;/li&gt;
  &lt;li&gt;배송 건수에 따라 S 화주로 부터 월 단위 시스템 사용료도 받는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;본문에 사용한 예제는 화주 S로 부터 배송 대행 요청을 받아, K 기사 네트워크를 보유하고 배송을 수행하는 시스템에 위임하는 코드입니다. 공개를 위해 이름을 약간 바꾸긴 했지만, 실제 상용 서비스에 사용하는 코드입니다. 하나의 배송 대행 요청에 대해 웹/앱 인스턴스에서 큐 메시지로 전송하기 위해 한 번, 큐 워커 인스턴스에서 메시지를 핸들링 하기 위해 한번, 총 두 번 사용됩니다(= 비동기 처리). 현재 우리 회사의 사업 규모로 볼 때 컴퓨터(서버)가 이 코드를 하루에 10만번 정도 읽고 실행합니다.&lt;/p&gt;

&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;여기서 질문!&lt;/p&gt;

&lt;p&gt;그렇다면 개발자는 이 코드를 몇 번이나 읽을까요? 성공적인 서비스에서 유지보수가 되어야 하는 코드는 개발자와 개발자를 거치면서 만 번 정도 읽힌다고 합니다. 컴퓨터가 이해할 수 있는 코드는 작동하기만 한다면 아무렇게나 짜도 됩니다. 그런데, 사람이 읽어야 하는 코드는, 그것도 서비스 유지보수를 위해 수 천번 이상을 읽어야 하는 코드는 어떻게 짜야 할까요?&lt;/p&gt;

&lt;p&gt;클린코드(엉클밥), 리팩토링(마틴파울러)의 책을 완벽히 이해하지도 못했고, 이해했다고 해도 모든 내용을 실천하지는 못합니다. 지금 MVP를 짜고 있나요? 그렇지 않다면, 몇 달 뒤의 자기 자신과 이 코드를 읽게 될 동료/후배 개발자들을 위해 좀 더 깔끔한 코드를 짜면 좋겠습니다. 디자인 원칙과 모범 사례를 지킨 코드는 버그와 사이드 이펙트를 현저히 줄여주고, 생산성을 월등히 끌어올려줍니다.&lt;/p&gt;

&lt;p&gt;이 글을 읽는 분 중에 Before 코드를 쓰신 선배님이 있을 수 있습니다. 비록 유지보수가 편리한 코드로 바꾸는 타이밍을 놓치긴했지만(이건 경영진과 매니저의 잘못), MVP를 만들어 주셔서 제가 월급을 받으며 일할 수 있기에 존경과 감사의 마음을 글로나마 전달합니다. 해서 Before 코드에 대한 설명은 달지 않겠습니다.&lt;/p&gt;

&lt;p&gt;이제 예제를 볼까요?&lt;/p&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;h2 id=&quot;before&quot;&gt;Before&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2016-05-24 ~ 2016-11-28, 10 커밋, 4 명의 커미터&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Jobs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OrderCreationJob&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;/**
     * @var Creator
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;/**
     * @var DeliveryOrderMapRepository
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timerStopSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timerStartSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Creator&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DeliveryOrderMapRepository&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$repository&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderCreator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QueueJob&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;/**
         * @var Delivery $delivery
         */&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'delivery_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$creator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;\Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] ** Started for Delivery [ID:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;existsNonNullMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;\Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] ** FAILED and GIVING UP for Delivery [ID:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Delivery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findOrFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryTrackingStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tracking_status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeliveryStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SUBMITTED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;\Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] ** Delivery Tracking Status Modified for Delivery [ID:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] Not Creating  Order&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;nx&quot;&gt;\Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] **** Creating  2.0 Order for Delivery [ID:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$orderDto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$creator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createOrder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stopTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;\Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] **** Created  2.0 Order [ID:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$orderDto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]. Took &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$time&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; seconds.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;\Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] ** Already created for Delivery [ID:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;startTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timerStartSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stopTimer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;float&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timerStopSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timerStopSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timerStartSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;after&quot;&gt;After&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2017-11-28&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Jobs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OrderCreationJob&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ALLOWED_NUMBER_OF_RETRY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryOrderMapRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryRetriever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;OrderCreator&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DeliveryOrderMapRepository&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryOrderMapRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DeliveryRetriever&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryRetriever&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderCreator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryOrderMapRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryOrderMapRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryRetriever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryRetriever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QueueJob&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'delivery_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'deliveryId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'오더 생성 잡 처리를 시작합니다.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;checkIfAlreadyCreated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;checkIfAllowedRetryCountReached&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryRetriever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retrieveById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;checkIfDeliveryStatusAlreadyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$orderDto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createOrder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OrderAlreadyCreatedException&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DeliveryStatusAlreadyChangedException&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OrderCreationFailedException&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'오더 생성 잡 처리를 마칩니다.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkIfAlreadyCreated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryOrderMapRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;existsNonNullMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OrderAlreadyCreatedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'deliveryId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkIfAllowedRetryCountReached&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QueueJob&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;attempts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ALLOWED_NUMBER_OF_RETRY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OrderCreationFailedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'deliveryId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'retryCount'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ALLOWED_NUMBER_OF_RETRY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkIfDeliveryStatusAlreadyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Delivery&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$deliveryTrackingStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryTrackingStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tracking_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deliveryTrackingStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeliveryStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SUBMITTED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeliveryStatusAlreadyChangedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'deliveryId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'deliveryTrackingStatus'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$deliveryTrackingStatus&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createOrder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Delivery&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'오더를 생성합니다.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'deliveryId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$orderDto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderCreator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createOrder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$elapsedTimeInSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$startTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'오더를 생성했습니다.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'deliveryId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$delivery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'orderId'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderDto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'elapsedTimeInSeconds'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$elapsedTimeInSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orderDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$level&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[OrderCreationJob] &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/work-n-play/clean-code-and-refactoring/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/work-n-play/clean-code-and-refactoring/</guid>
        
        <category>개발자</category>
        
        <category>CleanCode</category>
        
        <category>Refactoring</category>
        
        
        <category>work-n-play</category>
        
      </item>
    
      <item>
        <title>라라벨 엘로퀀트 모델 이벤트 고찰</title>
        <description>&lt;p&gt;라라벨 엘로퀀트에서 발생하는 모델 이벤트를 실험한 결과 입니다. &lt;a href=&quot;https://github.com/appkr/db-lock-poc&quot;&gt;선점 잠금과 비선점 잠금 실험을 위한 프로젝트&lt;/a&gt;에 이벤트 리스너를 등록하고 엘로퀀트 모델을 DB에 저장하고, 변경한 후 DB에 저장하고, 삭제할 때 어떤 이벤트가 발생하는지 살펴 봤습니다.&lt;/p&gt;

&lt;p&gt;이벤트를 잡기 위한 리스너 클로저는 아래와 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/appkr/db-lock-poc/blob/master/app/Providers/EventServiceProvider.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EventServiceProvider&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ServiceProvider&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;boot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'eloquent.*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/appkr/pattern/tree/master/Behavioral/Observer2&quot;&gt;관찰자(Observer) 패턴&lt;/a&gt;은 관찰의 대상이 되는 타입에, 대상을 관찰하려는 타입을 등록해두고, 특정 사건(Event)이 발생하면 등록된 관찰자의 함수를 호출하는 겁니다. 쉽게 말하면, “밥 다되면 불러줘~”라고 미리 말해두고, 밥이 다 되면 알려주는 거죠.&lt;/p&gt;

&lt;p&gt;“관찰자를 등록하고 사건이 발생하면 등록된 관찰자들에게 알려준다”는 큰 개념은 같지만, 라라벨의 엘로퀀트 모델은 &lt;code class=&quot;highlighter-rouge&quot;&gt;$observables&lt;/code&gt; 변수에 객체가 아닌 문자열로 관찰자를 등록합니다. 그리고 엘로퀀트에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt;와 같은 퍼블릭 함수가 작동할 때, 자신의 &lt;code class=&quot;highlighter-rouge&quot;&gt;fireModelEvent('created')&lt;/code&gt; 함수를 호출하고, 이 함수가 다시 관찰자에서 이벤트와 같은 이름을 가진 함수, 예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;created($this)&lt;/code&gt;를 호출하는 식으로 작동합니다.&lt;/p&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;h2 id=&quot;1-insert&quot;&gt;1. Insert&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$model-&amp;gt;update()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;$model-&amp;gt;push()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;$model-&amp;gt;touch()&lt;/code&gt; 등의 API도 결국에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 함수를 거치게 됩니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;saving&lt;/code&gt; 이벤트를 던진 후, 다시 Insert를 해야할지 Update를 해야할지 판단하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;performInsert()&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;performUpdate()&lt;/code&gt; 함수를 선택적으로 호출합니다. 분기된 함수 안에서 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;creating&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;created&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; 등의 이벤트를 던집니다. 분기된 함수 오퍼레이션이 끝나면 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;saved&lt;/code&gt; 이벤트를 던지고 수명을 다합니다.&lt;/p&gt;

&lt;p&gt;따라서, &lt;code class=&quot;highlighter-rouge&quot;&gt;saving&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;creating&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;created&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;saved&lt;/code&gt; 순서로 이벤트가 발생합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# https://github.com/appkr/db-lock-poc/blob/master/app/Http/Controllers/ProductController.php#L42&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;email&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin@foo.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.saving: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.creating: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: insert into &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;title&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;stock&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;price&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;description&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;updated_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;created_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; values &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?, ?, ?, ?, ?, ?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TEST TITLE&quot;&lt;/span&gt;,10,1000,&lt;span class=&quot;s2&quot;&gt;&quot;TEST DESCRIPTION&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;2017-10-22 10:21:53&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;2017-10-22 10:21:53&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.created: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.saved: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\R&lt;/span&gt;eview
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\R&lt;/span&gt;eview
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;product_id&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-update&quot;&gt;2. Update&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;saving&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;updating&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;updated&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;saved&lt;/code&gt; 순.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# https://github.com/appkr/db-lock-poc/blob/master/app/Http/Controllers/ProductController.php#L59&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;email&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin@foo.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null limit 1 &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;update &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\R&lt;/span&gt;eview
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\R&lt;/span&gt;eview
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;product_id&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;product_id&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.saving: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.updating: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: update &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;title&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ?, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;description&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ?, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;version&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ?, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;updated_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;새 상품 (상품명 수정됨)&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;,2,&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;,12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.updated: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.saved: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;product_id&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-delete&quot;&gt;3. Delete&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;deleting&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;deleted&lt;/code&gt; 순.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# https://github.com/appkr/db-lock-poc/blob/master/app/Http/Controllers/ProductController.php#L96&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;12&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\R&lt;/span&gt;eview
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\R&lt;/span&gt;eview
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;product_id&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.booted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;email&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? limit 1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin@foo.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; where 0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1 and &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;reviews&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is null
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.deleting: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: update &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;products&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;deleted_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ?, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;updated_at&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? where &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;,12]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...] local.INFO: eloquent.deleted: Myshop&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;omain&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;odel&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;roduct
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/work-n-play/investigating-laravel-model-events/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/work-n-play/investigating-laravel-model-events/</guid>
        
        <category>개발자</category>
        
        <category>Laravel</category>
        
        
        <category>work-n-play</category>
        
      </item>
    
      <item>
        <title>소프트웨어 장인 by 산드로 만쿠소</title>
        <description>&lt;div class=&quot;text-center&quot;&gt;
  &lt;img src=&quot;http://image.yes24.com/momo/TopCate582/MidCate002/58112706.jpg&quot; style=&quot;width:300px&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;[p.316] 나는 일을 선택하기 전에 아래와 같은 질문들을 스스로에게 던졌다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;나의 커리어로부터 나는 무엇을 원하는가?&lt;/li&gt;
  &lt;li&gt;그것을 성취하기 위한 다음 단계는 무엇인가?&lt;/li&gt;
  &lt;li&gt;이 일은 나의 커리어 방향과 합치하는가?&lt;/li&gt;
  &lt;li&gt;내가 이 회사에 줄 수 있는 가치의 양은 얼마나 되는가?&lt;/li&gt;
  &lt;li&gt;그러한 투자에 대한 이익은 무엇인가?&lt;/li&gt;
  &lt;li&gt;그러한 투자는 대략적으로 얼마 동안 지속되어야 하는가?&lt;/li&gt;
  &lt;li&gt;내가 되고자 하는 프로페셔널에 이르는 데 이 일은 어떻게 도움이 되는가?&lt;/li&gt;
  &lt;li&gt;이 일에서 나는 자율성, 통달, 목적의식을 가질 수 있나?&lt;/li&gt;
  &lt;li&gt;나의 고용주와 생산적인 동반자 관계를 맺을 수 있나? 양측 모두 가치를 얻고 행복할 수 있나?&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;[p.308] 장인의 길&lt;/p&gt;

&lt;p&gt;열정. 이 단어 하나가 모든 것을 요약한다. 소프트웨어 장인은 소프트웨어 개발과 자신의 직무에 열정적이다. 문제를 단순한 방법으로 푸는 데 열정적이다. 배우고 가르치고 공유하는 데에도 열정적이다. 소프트웨어 산업이 진화하도록 돕는 데도 열정적이다. 그들의 코드를 공유하고, 초보 개발자들을 멘토링하고, 블로그/책/동영상/대화 등을 통해 그들의 경험을 공유하는 데도 열심이다. 기술 커뮤니티 활동에도 열정적이다. 뿐만 아니라 소프트웨어 장인은 겸손하다. 항상 더 나은 개발자에게 무언가를 배울 자세가 되어 있고, 경험이 적은 개발자들을 돕기를 주저하지 않는다.&lt;/p&gt;

&lt;p&gt;향후 10년 간 계속해서 소프트웨어에 대한 수요가 늘어나고 세상이 더욱 더 소프트웨어에 의존할 것임은 누구도 부정하기 어렵다. 그러한 수요에 대응하기 위해 소프트웨어 장인은 다음 세대의 장인을 키우는 데 사회적 의무감을 느껴야 한다. 그렇게 함으로써 소프트웨어 산업을 더욱 성숙하고 프로페셔널해지도록 만들어야 한다.&lt;/p&gt;

&lt;p&gt;단순히 좋은 코드를 작성하고 비즈니스 가치를 전달하는 것만으로는 좋은 개발자는 될 수 있지만 장인은 될 수 없다. 장인은 일종의 삶의 철학이다. 우리의 삶 전체에 걸쳐서 최선을 다해 역량을 마스터할 과업으로 소프트웨어 개발을 선택한 것이다. 항상 최고의 코드를 만들도록 다른 것들을 희생해서라도 계속해서 배우고 남을 도우리라는 각오를 하는 것이다. 소프트웨어 장인으로서의 삶은 아름다운 코드를 작성하기 위한 일생에 걸친 헌신과도 같다. 소프트웨어를 통해 가치를 창출할 수 있는 더 나은, 더 효과적인 방법을 찾는 끊임없는 노력의 길이다.&lt;/p&gt;

&lt;p&gt;장인이 된다는 것은 새로운 것에 대해 호기심을 가지고 실험한다는 것과 같은 의미다. 장인은 특정 도구, 개발 언어, 프레임워크에 독단적인 고집을 부리지 않는다. 항상 주어진 문제에 가장 적합한 도구를 찾고 단순한 해결책을 추구한다. 특정 도구를 종교적으로 신봉하지는 않더라도 최선이라고 알려진 몇몇 조합들에 대해서는 완전하게 마스터하고 있어야 한다. 마스터한 도구들이 없다면 장인이라고 할 수 없다.&lt;/p&gt;

&lt;p&gt;진정한 소프트웨어 장인은 가장 먼저, 코드 작성이 아니라 문제 해결에 집중한다. 코드를 짤 때는 높은 품질의 코드를 작성하는 데 집중한다. 테스트 가능하고 쉽게 이해할 수 있으며 수월하게 유지보수할 수 있는 코드를 작성하는데 집중한다.&lt;/p&gt;

&lt;p&gt;장인은 자신이 떠나고 난 후 스스로 부끄러운 일로 떠올리는 상황을 만들지 않는다. 엉망인 코드, 작성자 본인 외에는 아무도 이해할 수 없는 코드로 하여금 남아 있는 개발자들의 지탄을 받을 일을 만들지 않는다. 반대로 장인은 긍정적인 일들로 연상되는 존재여야한다. 통찰력 있는 기여, 열정, 지식, 훌륭한 동료로서 인정받는다면 더할나위 없다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;[p.324] 소프트웨어 장인과 소프트웨어 개발자&lt;/p&gt;

&lt;p&gt;모든 장인은 개발자이지만 모든 개발자가 장인은 아니다. 많은 사람들의 생각과 상충되는 부분으로, 업무 연차나 보유 기술에 따라 장인이 되는 것도 아니다. 보통의 개발자와 장인의 차이점은 스스로 직업을 대하는 태도에 있다. 누구든 자기 자신을 장인이라고 부를 수는 있지만 그것만으로는 장인이 되었다고 할 수는 없다. 특정한 가치를 말하는 것과 그것을 실천하는 것은 완전히 별개의 이슈다. 추구하는 가치는 말이 아니라 행동에 의해 규정된다.&lt;/p&gt;

&lt;p&gt;적은 수였지만 스스로를 장인이라고 부르길 원치 않는 개발자들도 만나볼 수 있었다. 그들은 뭔가 이름 붙이는 것 자체를 싫어했고 ‘장인정신 따위’에 신경을 쓰고 싶어 하지 않았다. 그럼에도 불구하고 그들이 소프트웨어 개발을 대하는 태도, 자신의 일에 대한 관심, 매일 같이 활용하는 실행 관례들, 자기계발을 위한 열정, 고객에 대한 존중은 분명 좋든 싫든 장인이라 부르기에 충분했다.&lt;/p&gt;

&lt;p&gt;장인이 된다는 것은 다른 개발자들보다 우월하거나 더 낫다는 의미는 아니다. 누군가가 스스로를 장인이라고 부른다면 그가 추구하는 가치와 프로페셔널한 태도를 지칭하는 것이지 능력을 지칭하는 것이 아니다. 반대로 누군가가 스스로를 장인이라 하지 않는다고 해서 그가 장인이 추구하는 가치와 태도를 가지지 않았다는 의미도 아니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;[저자서문] 장인을 찾아서, 그리고 장인이 되기 위한 긴 여정&lt;/p&gt;

&lt;p&gt;첫 업무일은 월요일이었다. 그날 아침 나무르는 업무 할당에 대해서 이야기했다. 그는 내가 작업해야 할 애플리케이션의 한 부분에 대해 설명했고 금요일에 작업 결과를 같이 보자고 했다. 나는 흥분했다. 내 실력을 보일 절호의 기회였다. 내가 팀원으로서 자격이 있다는 것을 보여주고 싶었다. 그날 밤 12시가 다 되도록 사무실에 남아 있었고 몇 시간 밖에 자지 못했다. 화요일 아침 일찍 출근해 그날 오후 2시에 작업을 마쳤다. 주어진 시간의 절반도 안 되는 시간에 일을 끝낸 거이다. 정말 신이 났다. 물론 자신감이 있기는 했지만 바로 그 팀에서, 전혀 모르는 코드 베이스에서 작업한 것이었기 때문에 나로서는 아주 큰 성과였다. 흥분을 감추지 못하고 나무르의 사무실로 가서 “다 끝냈습니다. 동작도 합니다”라고 외치자, 그는 타이핑을 멈추고 나를 돌아봤다. “코딩이 직업인 사람이 동작하는 코드를 만드는 건 기본이에요.” 그는 조용히 말했다. “일을 끝냈다는 말에는 제대로 동작한다는 것이 당연히 포함되어 있죠.” 시비를 거는 듯한 말투였다. 내 얼굴에서 웃음기가 조금 사라졌지만 원래 그의 말투가 그런 걸로 치부했다. 어쩌면 오늘 그에게 다른 나쁜 일이 있었을지도 모르는 거였다. 절대 일부러 험악한 말을 하는 것은 아닐터였다. “여기 앉아서 작업한 코드를 같이 봅시다.” 나무르 옆에 앉았다. 그가 소스 컨트롤 시스템에서 내 작업 내용이 들어 있는 .pas 파일을 편집기에서 여는 것을 지켜 보았다. 검은 배경에 초록색 글자가 표시되는 끔찍스러운 커맨드 라인 편집기를 사용했다. 그때 vi(Unix의 문서 편집 툴)를 처음 보았다.&lt;/p&gt;

&lt;p&gt;우리는 그 당시 매우 유명한 델파이 IDE를 사용하고 있었다. 델파이 IDE는 매우 강력하고 편리한 통합 개발환경을 제공했다. vi로 델파이 소스 코드를 열어보는 것은 정말 생경했다. “코드를 같이 볼 거니까 가까이 오세요.” 그가 말했다. 내가 작성한 코드는 200줄 남짓이었다. 나무르는 첫 번째 라인으로 커서를 옮기고 한줄 한줄 보기 시작했다. 다섯 줄마다 잠시 멈춰서 “여기서 메모리 할당/해제를 하면 무슨 일이 일어나는 지 알고 있나요? 이 부분을 보세요. 한 메서드에서 메모리를 할당하고 다른 메서드에서 해제하고 있어요. 이런 코드는 잠재적으로 메모리 릭을 일으켜요. 여기 이 코드를 보세요. 좀더 생각해보면 이 여덟 줄은 두 줄로 줄일 수 있어요. try/catch 블록이 이렇게 크면 어떤 일이 일어날 수 있는지 알고 있나요? 이 변수와 메서드의 이름은 적절해요? 원래 의도한 의미가 뭐죠? 다른 동료가 이 코드를 수정할 일이 생기면 어떻게 될까요? 정보도 부족하고 이 코드가 작성된 맥락을 전혀 알 수가 없어서요. 이 코드에 대한 전후 정보가 아무것도 없는 상태에서 당신이 이 코드를 유지보수해야 한다면 어떻겠습니까? 여기에 하드 코딩된 비트들은 뭐죠? 이 값들을 수정할 때마다 소스 코드를 열어서 수정하고 다시 컴파일하고 전체 애플리케이션을 재배포해야만 하나요? 왜 여기저기 똑같은 코드들이 있죠? 으음… 이 메서드는 너무 기네요. 메서드마다 이렇게 코드가 길면 코드를 해석할 때 머릿속에 한번에 담고 있어야 할 정보가 얼마나 많아지는지 알고 있어요? 좀더 단순하면서도 작게 만들고 동작 내용에 맞춰서 네이밍을 하면 어떨까요?” 그는 계속 말을 이어갔다.&lt;/p&gt;

&lt;p&gt;어떤 부분에서는 잠깐 멈춰서 몇 줄의 코드를 가만히 살펴보기 시작했다. 몇 분 후, 커서를 한 페이지 위로, 또 다시 한 페이지 아래로 옮겼다. 1990년대에는 다른 사람이 알아볼 수 없는 난해한 코드를 짤 수 있는 사람이 실력있는 개발자로 통했다. “와우! 그는 똑똑한 개발자가 틀림없어. 그 사람 코드는 무엇을 하는 코드인지 전혀 감을 잡을 수가 없거든.” 나 역시 내가 얼마나 똑똑한지 보이려고 난해한 코드들을 조금 집어 넣었다. 나무르는 순간, 그 코드가 무엇을 하는지 알아냈다. 나는 내 기분을 띄워줄 말을 기대했다. “이 코드가 얼마나 무례한지 알고 있습니까?” 그는 조용히 말했다. “많은 팀과 개발자들이 같은 코드 베이스에서 아주 큰 시스템을 만들고 있습니다. 모든 개발자들이 이런 식으로 으스대려고 난해한 코드를 만들면 코드를 이해하기가 얼마나 어려워질지 생각해봤나요? 수천 라인, 아니 수백만 라인의 코드가 이런 식이라고 상상해보세요” 그의 말은 이제 시비가 아니라 공격이었다.&lt;/p&gt;

&lt;p&gt;코드는 겨우 200라인 남짓이었다. 나무르가 제기한 문제들에 답을 하지도, 적당히 되받아치지도 못했다. 그는 코드 라인마다 문제를 지적했고 어덯게 하면 더 나아지는지 설명했다. 코드의 마지막에 이르렀을 때 얼굴이 화끈거리고 마음은 불편했다. 나무르는 제3자가 작성한 코드에 대해 말하는 것처럼 차분했다. “내가 한 말들을 다 이해했나요? 모두 동의합니까?” 나는 아무 말도 하지 않고 고개만 끄덕였다. “이 코드들을 더 나은 쪽으로 바꿀 수 있겠어요?” 그를 보지 않고 나는 고개만 끄덕였다. “오늘 이야기한 것들을 앞으로도 계속 적용할 수 있겠지요?” 다시 한번 고개를 끄덕였다. 그는 키보드를 몇 번 두드려서 내가 작성한 모든 코드가 들어 있는 파일을 삭제했다. “좋습니다. 아직 3일이나 남았으니 다시 해보세요.”&lt;/p&gt;

&lt;p&gt;충격에 휩싸였다. 어떻게 반응해야 할지 몰랐다. 아무 말도 없이 천천히 일어서서 문쪽으로 걸어갔다. “산드로.” 문에 다다랐을 때 그가 나를 불렀다. 나는 멈춰서서 그를 돌아봤다. “일을 하는 것도 중요하지만 그에 못지 않게, 일을 어떻게 하느냐도 중요합니다.” 이 말을 끝으로 나무르는 자신의 컴퓨터로 돌아앉아 그 끔찍한 검은 배경에 초록색 글자가 나오는 편집기에 다시 타이핑을 시작했다.&lt;/p&gt;

&lt;p&gt;낙담했다. 아니 사실 화가 났다. 나무르의 사무실을 나와서는 바로 계단을 내려가 건물 밖으로 나왔다. 도대체 그가 뭐길래 나에게 이런 말을 할 수 있나? 형편없는 사람이다! 그런 사람을 위해서 일할 수는 없다. 이제 됐다. 이 회사와는 끝이다. 그만둘테다. 담배 몇 개비로 다음을 안정시킨 후 무슨 일이 일어난 건지 되새겨보았다. 나무르는 1시간 넘게 나의 코드를 보면서 어떻게 하면 더 나은 코드를 만들 수 있는지 설명했다. 어떤 부분에서는 내 의견을 경청했고 틀린 점과 더 개선할 수 있는 방법을 이야기했다. 코딩을 시작한 이후 처음으로, 내게 시간을 들여 좋은 코드를 만드는 방법을 보여 주는 사람을 찾았다는 사실을 깨달았다. 다른 사람들이 성장할 수 있도록 진심으로 도와주는, 나보다 더 나은, 훨씬 다양한 경험이 있는 누군가를 찾았다. 더 훌륭하고, 더 높은 품질의 소프트웨어를 만드는 데 가치를 두는 사람을 찾았다. 나를 가르치는 데 기꺼이 시간을 투자하는 사람을 만났다. 무엇보다도 나의 첫 번째 멘토를 찾았다.&lt;/p&gt;

&lt;p&gt;몇 개비의 담배를 더 태우고 몸을 추스른 후, 나는 내적으로 다른 사람이 되었다. 그날 나는, 나 자신이 그렇게 잘난 사람이 아니라는 것과 배워야 할게 아직 많음을 알았다. 그리고 겸손해져야 한다는 것도. 일을 끝내는 것 자체로는 부족하다는 것, 그 일을 어떻게 하느냐가 더 중요하다는 것, 특히 팀에서 일할 때는 더욱 그러하다는 것을 배웠다. 나의 동료와 클라이언트를 존중하고, 형편없는 코드를 남겨서는 안된다는 것을 배웠다.&lt;/p&gt;
</description>
        <pubDate>Sat, 23 Sep 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/learn-n-think/software-craftsmanship-by-sandro-mancuso/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/learn-n-think/software-craftsmanship-by-sandro-mancuso/</guid>
        
        <category>개발자</category>
        
        <category>프로세스</category>
        
        
        <category>learn-n-think</category>
        
      </item>
    
      <item>
        <title>UML 훑어보기</title>
        <description>&lt;p&gt;이 슬라이드는 Modern PHP User Group 2017년 9월 정기 모임 (벼락치기 땜빵) 발표 자료입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-09-07-img-01.png&quot; alt=&quot;UML 훑어보기&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;panel panel-default&quot; style=&quot;width:100%; max-width: 600px; margin: 1em auto;&quot;&gt;
  &lt;div class=&quot;panel-body text-center&quot;&gt;
    &lt;a href=&quot;https://drive.google.com/file/d/0Bx8_tW_C70eNZGF4YXhGUG5DcVU/view?usp=sharing&quot;&gt;
      &lt;i class=&quot;material-icons&quot;&gt;open_in_browser&lt;/i&gt;
      브라우저에서 슬라이드 열기
    &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Sep 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/work-n-play/uml-quick-peek/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/work-n-play/uml-quick-peek/</guid>
        
        <category>개발자</category>
        
        <category>UML</category>
        
        <category>OOP</category>
        
        
        <category>work-n-play</category>
        
      </item>
    
      <item>
        <title>애자일 선언서 이해하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2017-08-20-agile-01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;&lt;small class=&quot;text-muted&quot;&gt;그림출처: http://forintus.com/tag/agile-manifesto/&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;text-center&quot;&gt;
  &lt;p&gt;&lt;strong&gt;&lt;small&gt;Manifesto for Agile Software Development&lt;/small&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;p&gt;&lt;small&gt;We are uncovering better ways of developing software by doing it and helping others do it.&lt;/small&gt;&lt;/p&gt;
  &lt;p&gt;&lt;small&gt;Through this work we have come to value:&lt;/small&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p class=&quot;lead&quot;&gt;INDIVIDUALS AND INTERACTIONS &lt;small&gt;over&lt;/small&gt; PROCESSES AND TOOLS&lt;/p&gt;
  &lt;p class=&quot;lead&quot;&gt;WORKING SOFTWARE &lt;small&gt;over&lt;/small&gt; COMPREHENSIVE DOCUMENTATION&lt;/p&gt;
  &lt;p class=&quot;lead&quot;&gt;CUSTOMER COLLABORATION &lt;small&gt;over&lt;/small&gt; CONTRACT NEGOTIATION&lt;/p&gt;
  &lt;p class=&quot;lead&quot;&gt;RESPONDING TO CHANGE &lt;small&gt;over&lt;/small&gt; FOLLOWING A PLAN&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;That is, while there is value in the items on the right, we value items on the left more.&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;&lt;small&gt;Kent Beck, Mike Beedle, Arie van Bennekum, Alistair Cockburn, Ward Cunningham, Martin Fowler, James Grenning, Jim Highsmith, Andrew Hunt, Ron Jeffries, Jon Kern, Brian Marick, Robert C. Martin, Steve Mellor, Ken Schwaber, Jeff Sutherland, Dave Thomas&lt;/small&gt;&lt;/p&gt;
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;&lt;small&gt;©2001, the above authors&lt;/small&gt;&lt;/p&gt;
  &lt;p&gt;&lt;small&gt;this declaration may be freely copied in any form, but only in its entirely through this notice.&lt;/small&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;애자일 선언서는 동 시대를 살아가는 가장 유명한 애자일 멘토들이 개발자들에게 외치는 “복무신조”, “우리의 다짐” 같은 것이다&lt;small class=&quot;text-muted&quot;&gt;(맞나요? 제대한 지 20년도 넘어서)&lt;/small&gt;. 선언서에서 오른쪽의 것들이 중요하지 않다는 것이 아니라, 소프트웨어 개발자로서 왼쪽의 것을 추구하라고 말씀하신다.&lt;/p&gt;

&lt;p&gt;개인마다 해석이나 이 선언서가 주는 임팩트는 다를 수 있다. 필자가 나름대로 이해한 내용을 썰로 풀어 본다.&lt;/p&gt;

&lt;h2 id=&quot;individuals-and-interactions-over-processes-and-tools&quot;&gt;INDIVIDUALS AND INTERACTIONS &lt;small&gt;over&lt;/small&gt; PROCESSES AND TOOLS&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;프로세스나 도구를 모든 팀에 획일적으로 적용해서는 안되며, 팀의 성격에 맞게 써야 한다.&lt;/strong&gt; 가령 애자일 도구로 유명한 스크럼이나 칸반이 모든 팀이 따라야 하는 매직 프로세스는 아니라는 의미다. 프로세스나 도구에 매몰되어, 실제로 산출해야 할 결과물인 작동하는 소프트웨어를 등한시 하는 어리석음을 범하지 말아야 한다. 대기업이란 문맥에서는, 개발자의 생산성이 덜 나올 수 밖에 없다, 지켜야 할 프로세스가 많기 때문에…&lt;/p&gt;

&lt;p&gt;팀에서 위키, 지라, 슬랙, 이메일을 사용한다고 하자. 가장 위험한 상황은&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“아 그거 이틀 전에 위키에 답변 드렸는데…“라고 말하거나,&lt;/li&gt;
  &lt;li&gt;슬랙으로 업무 요청하고 결과를 마냥 기다린다거나,&lt;/li&gt;
  &lt;li&gt;지라 티켓 등록하고 담당자 할당 후 팔로우 업을 하지 않는&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;상황들이다.&lt;/p&gt;

&lt;p&gt;우리&lt;small class=&quot;text-muted&quot;&gt;개발자&lt;/small&gt; 스스로에게 반문해보라. 작업에 몰두하고 있을 때, 이런 메시지를 확인하기 위해 주기적으로 자기 자신에게 인터럽트를 거는지? 필자의 경우, 담배 필 때나 화장실 갈 때 몰아서 보는 편이다.&lt;/p&gt;

&lt;p&gt;답은 의외로 간단하다. 자리에 가서, “스펙 수정 요청 보냈어요. 자세한 내용은 위키에 썼으니 확인해주세요”라고 한번 더 말하는 것이다, 상대방이 멀리 있다면 30초 짜리 전화 한통이면 된다. 아래 링크에서 한 숨만 나오는 CEO를 만나보라.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/learn-n-think/what-is-follow-up/&quot;&gt;Follow Up 이란?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;팀을 들여다 보라~ 적합한 프로세스와 도구로 인터랙션하고 있는가?&lt;/strong&gt; “남들이 하니까 무조건 따라한다”라는 위험한 선택을 하고 있지 않는가? “남들이 하니까”는 판단을 위한 참고자료일 뿐이다.&lt;/p&gt;

&lt;h2 id=&quot;working-software-over-comprehensive-documentation&quot;&gt;WORKING SOFTWARE &lt;small&gt;over&lt;/small&gt; COMPREHENSIVE DOCUMENTATION&lt;/h2&gt;

&lt;p&gt;너무나도 당연한 얘기다. &lt;strong&gt;최종 산출물&lt;small class=&quot;text-muted&quot;&gt;Deliverable&lt;/small&gt;이 무엇인지 잘 생각해 보라. “작동하는 서비스&lt;small class=&quot;text-muted&quot;&gt;=우리가 준비한 런타임 환경 + 우리가 개발한 소프트웨어&lt;/small&gt;“다.&lt;/strong&gt; UI 목업이나 초벌 구현 소프트웨어를 보면서 고객과 대화해 본 적이 있다면 그 강력함에 동의하며, “무릎을 탁~” 칠 것이다.&lt;/p&gt;

&lt;p&gt;문서가 중요하지 않다는 것이 아니다. 작동하는 소프트웨어 만큼이나 문서도 중요하다. 일을 시작하기 위해 문서가 필요하고, 일을 끝내기 위해서 문서가 필요하다. 상위 요구사항이 구체화되어야 일을 시작할 수 있고, 프로젝트 진행 중에 구체화된 하위 스펙을 전부 구현해야 일을 끝낼 수 있다는 점을 상기시켜보라&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;예를 들어, 완벽한 시스템을 상위 설계하고 문서화 했다고 하자. 그런데, 그것은 그냥 문서일 뿐이다. 작동하는 소프트웨어가 없는 문서가 무슨 의미가 있는가?&lt;/p&gt;

&lt;p&gt;개발자로 경력을 전환하기 위해 10개월의 준비 기간을 가지는 동안, 꽤 여러 명의 청년 창업가들을 만났다. 말하는 목표 시스템은 전부 애플/잡스 급이다. 그런데, 공허한 말로만 존재할 뿐, 심지어 문서도 없고, 작동하는 최소한의 서비스는 당연히 없었다. 창투사들이 MVP&lt;small class=&quot;text-muted&quot;&gt;Minimum Viable Product&lt;/small&gt;를 요구하는 이유다&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. 해결하고자하는 비즈니스 문제를 정확히 이해하고, 현실적인 해결책을 가지고 있는 창업가들은 조금씩이라도 힘 닿는데로 도와줬다.&lt;/p&gt;

&lt;h2 id=&quot;customer-collaboration-over-contract-negotiation&quot;&gt;CUSTOMER COLLABORATION &lt;small&gt;over&lt;/small&gt; CONTRACT NEGOTIATION&lt;/h2&gt;

&lt;p&gt;필자는 2002년부터 10년 동안 非 개발자로서, 투자를 받거나, 차입을 하거나, 기술을 도입하거나, 인력 파견 요청을 하거나, 회사를 파는 등 크고 작은 계약을 경험했다. 그런데, 생각해 보니 누군가의 요청을 받아 용역&lt;small class=&quot;text-muted&quot;&gt;SI&lt;/small&gt;을 제공하는 계약을 다루어 본 적 없는 甲이었다. 해서 이 원칙을 이해하는데 있어서 전문성이 떨어질 수 밖에 없다. 그런데, 고객이란 꼭 외부의 고객만을 의미하지 않는다. 개발자의 직접 고객인 팀 동료, 매니저, 기획과 QA, 간접 고객인 사업 부서도 넒은 의미의 고객이라 생각할 수 있다.&lt;/p&gt;

&lt;p&gt;필자는 이 원칙을 “상호 이득&lt;small class=&quot;text-muted&quot;&gt;Mutual Benefit&lt;/small&gt;“을 추구하기 위해 계약&lt;small class=&quot;text-muted&quot;&gt;=약속 또는 스펙&lt;/small&gt;보다는 고객과 지속적 협업을 이끌어 내야한다는 취지로 이해했다.&lt;/p&gt;

&lt;p&gt;역시 경력전환기 동안 생계를 위해 용역을 기웃대던 시절 이야기다. 일을 주겠다는 사람을 만나보면, 그들이 하고 싶은 것이 무엇인지 정확인 기술하지 못하는 경우가 많았다. 그들의 잘못이 아니다. 해보지 않았기 때문에, 고객도 용역을 제공하는 쪽도 알 수 없는 것이다. 일의 시작이 계약이라고 한다면, 요구사항이 명확하지 않으니 밀땅을 하며 계속 시간을 지체하고 계약을 하지 말라는 것인가? 그것은 서로간에 에너지 낭비다. 현실적으로 계약서에 완벽한 요구사항과 계약 완료 조건을 담을 수는 없다. 개발자는 이 시기에 구현 가능성을 검토하고, 필요한 도구를 조사하면 된다.&lt;/p&gt;

&lt;p&gt;훌륭한 고객은 구체적인 작업 목록을 제시하진 못해도, 해결하고자 하는 비즈니스 문제와 최종 결과물의 목표 이미지를 명확히 인지하고 있다. 또, 훌륭한 용역 제공자는 자신이 뭘 하고 싶은 지 설명하지 못하는 고객일지라도, 그들이 해결하고자 하는 문제를 구체화할 수 있도록 이끌어 주고, 최종 결과물의 목표 이미지와 기대 효과를 가늠할 수 있도록 해준다.&lt;/p&gt;

&lt;p&gt;일단 일을 시작하게 되면 고객과 계속 협업해야 한다. 계약을 수행하는 중에 스펙은 계속 변한다, 그것이 고객에 의해서든, 개발팀의 한계에 의해서든. 고객이 제시한 요구사항을 구현하다보면 더 좋은 설계를 역으로 제안하는 경우도 있다. 가끔은 팀의 현재 기술 수준, 시간, 또는 자원의 한계로 구현이 불가한 경우도 있다. 개발자는 매일 매일 선택의 순간을 만나게 되고(e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt;), 스스로 선택할 수 없는 문제라면, 고객에게 빠르게 결정을 요청해야 한다. 스펙 변경에 의해 개발자의 일 량이 늘거나 줄기도 하며, 기간을 늘리거나, 개발자를 더 투입해야 하는 순간도 있는데, 프로젝트/팀 매니저의 역할이다&lt;small class=&quot;text-muted&quot;&gt;오버타임하거나 태업하는 개발자를 관리하는 것은 매니저의 책임&lt;/small&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;계약을 하지 말라는 얘기가 아니다. 계약은 무조건해야 한다. 다만, “상호 이득”을 위해 서로가 긴밀하게 협업해야 한다&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;responding-to-change-over-following-a-plan&quot;&gt;RESPONDING TO CHANGE &lt;small&gt;over&lt;/small&gt; FOLLOWING A PLAN&lt;/h2&gt;

&lt;p&gt;필자는 반도체 설계 전문 회사&lt;small class=&quot;text-muted&quot;&gt;FABLESS라 부름&lt;/small&gt;에서 꽤 오래 근무했다. 제품성, 수익성, 사업성을 판단해서 콤포넌트 레벨의 상위 설계를 하는 제품 기획자 역할이었다. 목표 미세 공정 수준에 따라 다르긴 하지만, 32bit 범용 Applications Processor는 3개월 제품 기획 -&amp;gt; 1.5년 설계 -&amp;gt; 3년동안 생산/판매의 수명을 가진다. 설계가 끝나면 양산을 위해 마스킹 및 양산 셋팅 과정을 거치는데, 오류가 발견되면 마스크를 다시 떠야 한다. 당시 회사는 90~45nm 제품들을 설계했었는데, 45nm 기준 2년 개발 기간 동안 대략 100억원의 개발비를 쓰는데, 수정의 양에 따라 1억원 ~ 풀 리비전을 하게 되면 20억원의 비용이 더 써야한다. 개발은 끝났지만, 시장 환경이 변해서 제품성, 수익성, 사업성 측면에서 쓸모 없는 제품이면 매몰 비용으로 빨리 잊어버리고 다음 제품 개발에 몰두해야 한다.&lt;/p&gt;

&lt;p&gt;이 이야기로 시작한 이유는 반도체는 “하드웨어”이고 우리는 “소프트웨어”를 다룬다는 점을 부각시키기 위해서다. 애자일 멘토들이 말하는 “변경을 받아 들이라”는 가치는, 한국의 소프트웨어 개발자에게는 과하게 이상적이란 생각이 든다.&lt;/p&gt;

&lt;p&gt;그럼에도 불구하고, 소프트웨어는 원래 변경이 발생하는 것이 속성이며, 소프트웨어 개발자의 존재 이유는 그 변경을 처리하는 것이라 생각한다. 프로젝트에 관여하고 있는 등장 인물들의 역할을 잠깐 생각해 보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;고객은&lt;small class=&quot;text-muted&quot;&gt;앞 절에서 말한 광의의 고객&lt;/small&gt; 도메인 전문가 들이다.&lt;/li&gt;
  &lt;li&gt;우리들의 역할은 소프트웨어 설계라는 고도의 전문적인 기술을 가지고, 도메인 전문가들이 풀고자 하는 문제를 풀 수 있도록 도와주는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;우리의 설계를 담은 최종 서비스를 사용하는 것은 우리 자신이 아니라 고객이다. 우리는 도메인을 잘 모르고, 그들이 처한 상황을 잘 모른다. 변경이 발생하는 원인도 생각나는대로 나열해보자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;계획이 틀렸을 수 있다.&lt;/li&gt;
  &lt;li&gt;고객의 시장 또는 경쟁 환경이 변했을 수 있다.&lt;/li&gt;
  &lt;li&gt;고객이 더 효율적으로 일하는 방법을 찾았거나, 일하는 프로세스가 바뀌었을 수 있다.&lt;/li&gt;
  &lt;li&gt;설계가 틀렸을 수 있다&lt;small class=&quot;text-muted&quot;&gt;=bug&lt;/small&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;우리보다 더 제품에 대해 더 많은 지식을 가진, 그들이 항상 옳고 그들의 변경 요구사항을 처리해 주는 것이 우리의 존재 이유다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;처음부터 완벽한 계획도 없고, 처음부터 완벽한 시스템도 없다.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;strong&gt;개발자도 문서를 잘 써야 한다.&lt;/strong&gt; 필자는 코드 만큼이나 문서도 중요시 한다. 정확히는 “문서를 통한 의사소통”을 중요시 한다. 내 생각/설계를 다른 이에게 전달을 위해서다. 전체 코드를 디코드하는 비용과 문서를 이해하는 비용 중 어떤 것이 더 비용/시간 효율적일까? 라고 생각해보라. 또는 문서에 써놓은 예제 코드 몇 줄의 효용성을 생각해보라. 개발자가 쓴 문서는 그 문서를 읽는 3개월 뒤의 자신 또는 팀 동료가 고마워해야 한다. 그래서 개발자의 문서는 주절주절보다는 다이어그램이 좋다. 게다가 전세계 모든 개발자가 이해할 수 있는 표준 UML이면 더 좋을테다. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;strong&gt;MVP를 Base Code로 사용하지 말라.&lt;/strong&gt; 버리고 다시 만들어야 한다. MVP는 설계가 더럽지만 빨리 만드는 것이 목표이고, 실제 비즈니스할 서비스는 현재 시점에서 오버하지 않는 수준으로 설계 원칙을 지켜서 만들어야 한다. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;strong&gt;상위 요구사항이 명확하면, 개발자는 하위 작업 목록을 식별할 수 있다.&lt;/strong&gt; 개발자는 각 하위 작업에 소요될 시간을 가늠할 수 있고, 전체 개발 기간을 계산할 수 있다. 그런데, 어떤 이유에서든 간에 개발자가 하위 작업 목록을 식별할 수 없는 상태에서 “이거 얼마냐 걸려?”라고 묻지 말아야 한다&lt;small class=&quot;text-muted&quot;&gt;엉클 밥도 그런 류의 질문을 거세게 비난했다&lt;/small&gt;. 요구사항이 구체화되지 전까지, 누구도 미래의 예측하는 마법의 수정 구슬을 가지고 있지 않으므로, 개발 기간은 Unknown Unknown이다. 개발 기간이 산정되지 않았다고 일을 시작하지 못하는 것은 아니다. 다만, 요구사항이 어렴풋한 상태에서 산출한 개발 기간은 바뀔 수 있다는 것을 서로가 이해해 주면 된다. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 20 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/learn-n-think/agile-manifesto/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/learn-n-think/agile-manifesto/</guid>
        
        <category>개발자</category>
        
        <category>프로세스</category>
        
        
        <category>learn-n-think</category>
        
      </item>
    
      <item>
        <title>코드 비용에 대한 2016년의 메모</title>
        <description>&lt;p&gt;책상을 정리하다가 “라라벨 빨간책”이라 알려진 책을 집필하며 2016년 초에 쓴 메모 중 일부를 찾았다.&lt;/p&gt;

&lt;p&gt;실무 개발자로 일하지 않던 시절 피상적으로만 생각하던 내용들이 지금은 피부에 와 닿는다. 이 포스트의 본문은 최근 나 또는 내가 속한 팀이 처한 상황에 거의 흡사하게 오버랩핑되는 2016년 메모의 일부분이다. 내 기억이 맞다면, 누군가의 영상 강의를 보고 메모한 것이다.&lt;/p&gt;

&lt;p&gt;이 시대의 스승(엉클 밥, 파울러 옹 등)들이 언급한 소프트웨어 개발자로서 코드를 대하는 자세, 즉 소프트웨어의 제 2가치와 제 1가치에 대해 다시 한번 되새겨본다.&lt;/p&gt;

&lt;p&gt;개발해서 남에게 납품하는 소프트웨어는 굳이 이럴 필요까진 없다고 생각한다. 그러나, 자신의 서비스를 위해 소프트웨어를 개발한다면, 개발자가 코드를 완전히 소유할 수 있는 시간과 비용을 인정해 줘야 한다.&lt;/p&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;h2 id=&quot;cost-of-codeprogram&quot;&gt;Cost of Code(=~Program)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Cost of introduction (최초 개발 비용, 모두가 합의한 비용)&lt;/li&gt;
  &lt;li&gt;Cost of change (수정 비용, 사업적 필요에 의해 발생할 수 밖에 없는 비용)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cost of ownership&lt;/strong&gt; (소유 비용, &lt;strong&gt;Time and effort it takes to maintain the owned application logic to support its ongoing change&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;That’s why some engineers try to increase the cost of introduction in an attempt to affect the cost of change curve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;ownership-of-code&quot;&gt;Ownership of Code.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Own only the logic you need to change (계속 유지보수할 코드만 소유).&lt;/li&gt;
  &lt;li&gt;Write only the logic you need to own (완전히 소유할 코드만 작성).&lt;/li&gt;
  &lt;li&gt;Own everything you write (작성한 것은 완전히 소유).&lt;/li&gt;
  &lt;li&gt;Try not to write anything that you will not own (소유&lt;small class=&quot;text-muted&quot;&gt;유지보수&lt;/small&gt;하지 않을 코드는 쓰지 말것).&lt;/li&gt;
  &lt;li&gt;Reuse everything else (나머지&lt;small class=&quot;text-muted&quot;&gt;이미 발명된 바퀴&lt;/small&gt;는 전부 재사용).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;code-process&quot;&gt;Code Process&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Document the needs (요구사항 문서화).&lt;/li&gt;
  &lt;li&gt;Experiment with tools available (선행 기술 조사).&lt;/li&gt;
  &lt;li&gt;Document changes and constraints (변경 필요 요구사항과 한계점 판단).&lt;/li&gt;
  &lt;li&gt;Stabilize. Claim ownership when the thing grows outside of tool boundary (소유할 것과 하지 않을 것을 구분해서 개발).&lt;/li&gt;
  &lt;li&gt;Isolate religiously (경계를 명확히).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/images/2016-l5book-memo-9.jpg&quot;&gt;&lt;img src=&quot;/images/2016-l5book-memo-9.jpg&quot; alt=&quot;Memo Page 9&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2016-l5book-memo-10.jpg&quot;&gt;&lt;img src=&quot;/images/2016-l5book-memo-10.jpg&quot; alt=&quot;Memo Page 10&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://drive.google.com/file/d/0Bx8_tW_C70eNc2F4SC1tdzRabHM/view?usp=sharing&quot;&gt;Memo Captured(pdf)&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/learn-n-think/memo-in-early-2016/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/learn-n-think/memo-in-early-2016/</guid>
        
        <category>개발자</category>
        
        <category>프로세스</category>
        
        
        <category>learn-n-think</category>
        
      </item>
    
      <item>
        <title>MySQL 테이블 잠금 실험</title>
        <description>&lt;p&gt;MySQL의 잠금 특성을 확인하기 위한 실험 결과입니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;읽기 잠금의 동작 특성&lt;/li&gt;
  &lt;li&gt;쓰기 잠금의 동작 특성&lt;/li&gt;
  &lt;li&gt;트랜잭션과 Row 잠금&lt;/li&gt;
  &lt;li&gt;라라벨에서 트랜잭션과 잠금&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;p&gt;테스트 테이블 생성&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lock_test&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLLATE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8_unicode_ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AUTO_INCREMENT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;140&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATUS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;messages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-읽기-잠금의-동작-특성&quot;&gt;1. 읽기 잠금의 동작 특성&lt;/h2&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;READ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROCESSLIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Query ok&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- 다른 프로세스(=~커넥션=~세션)에서 실행&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WRITE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스에서 테이블 전체에 대해 읽기 잠금을 걸었으므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스는 무한 뺑글이.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROCESSLIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- &quot;Waiting for table metadata lock&quot; &amp;lt;= mysql2 프로세스의 상태&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt;이 테이블 잠금을 푸는 순간 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스는 뺑글이 사라지고, 쓰기 잠금 얻어감.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스가 테이블에 대해 쓰기 잠금을 얻어 갔으므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스는 무한 뺑글이.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- 무한 뺑글이 돌던 SELECT 쿼리 취소 후&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OPEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lock_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스가 잠금을 가지고 있으므로 다른 프로세스에서 잠금 해제 불가.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Query ok.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;READ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Query ok.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Query ok.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스가 읽기 잠금을 걸었으므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스에서도 읽기는 가능하지만, 쓰기를 시도하면 무한 뺑글이.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Table 'messages' was locked with a READ lock and can't be updated&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;읽기 잠금을 건 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스도 쓰기 불가능을 마찬가지임.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;테이블에 걸린 모든 잠금이 풀렸으므로, 뺑글이를 돌던 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt;의 뺑글이는 사라지고 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 쿼리가 작동함.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;한 레코드 확인 가능.&lt;/p&gt;

&lt;h3 id=&quot;11-결론&quot;&gt;1.1. 결론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; 무관한게 먼저 테이블을 잠근 프로세스가 잠금을 반환하기 전에 다른 프로세스는 잠금을 얻을 수 없다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; 잠금이 걸린 상태에서
    &lt;ul&gt;
      &lt;li&gt;다른 프로세스에서 테이블을 읽는 것은 가능하다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; 잠금은 건 프로세스를 포함해 모든 프로세스에서 테이블에 쓰기 작업은 할 수 없다.&lt;/li&gt;
      &lt;li&gt;잠금을 가진 프로세스에서 쓰기를 시도하면 바로 오류가 발생하지만, 다른 프로세스에서는 잠금이 풀릴 때 까지 기다린다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-쓰기-잠금의-동작-특성&quot;&gt;2. 쓰기 잠금의 동작 특성&lt;/h2&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WRITE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'BAZ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Query ok.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스에서는 무한 뺑글이.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Can't execute the given command because you have active locked tables or an active transaction&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; 잠금을 가진 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스지만, 테이블 이름을 변경하는 등의 DDL은 불가능함.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;테이블에 걸린 모든 잠금이 풀렸으므로, 뺑글이를 돌던 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt;의 뺑글이는 사라지고 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 쿼리가 작동함.&lt;/p&gt;

&lt;h3 id=&quot;21-결론&quot;&gt;2.1. 결론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; 잠금을 가진 프로세스에서만 읽기, 쓰기 가능하다.&lt;/li&gt;
  &lt;li&gt;다른 프로세스에서는 잠금이 풀릴 때가지 읽기, 쓰기 모두 불가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-트랜잭션과-row-잠금&quot;&gt;3. 트랜잭션과 Row 잠금&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... LOCK IN SHARE MODE&lt;/code&gt; for READ, &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... FOR UPDATE&lt;/code&gt; for UPDATE and DELETE.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRANSACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHARE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Query ok.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRANSACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Lock wait timeout exceeded; try restarting transaction&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스에서 1번 Row를 잠궜지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스에서 읽기는 가능. 반면, 쓰기 동작을 하려하면 50초 동안 뺑글이를 돌다가 쿼리 실패함. 50초에 대한 힌트는 아래 쿼리에서 찾을 수 있음.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLE_NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%innodb_lock%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- innodb_lock_wait_timeout: 50&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql2&lt;/code&gt; 프로세스에서 뺑글이가 돌고 있는 상태에서 쨉싸게 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql1&lt;/code&gt; 프로세스에서 같은 Row 1번을 지움.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;mysql1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- No errors; 1 row affected&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;한편 mysql2 프로세스에서는… 데드락이 발생함.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- [ERROR in query 2] Deadlock found when trying to get lock; try restarting transaction&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INNODB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;31-결론&quot;&gt;3.1. 결론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Row 잠금이 걸려도 다른 프로세스에서 읽기는 가능하지만, 쓰기는 불가능하다.&lt;/li&gt;
  &lt;li&gt;Row 잠금이 걸린 상태에서 다른 프로세스에서 쓰기를 시도하려 하면, &lt;code class=&quot;highlighter-rouge&quot;&gt;innodb_lock_wait_timeout&lt;/code&gt; 옵션으로 설정된 시간 만큼 기다리다가 잠금을 얻는 것을 포기하고 쿼리 실패한다.&lt;/li&gt;
  &lt;li&gt;같은 Row에 대해 여러 개의 프로세스가 동시에 쓰기를 시도할 때 Dead Lock(교착상태)이 발생할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-라라벨에서-트랜잭션과-잠금&quot;&gt;4. 라라벨에서 트랜잭션과 잠금&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/appkr/db-lock-poc/blob/master/core/Myshop/Infrastructure/Eloquent/EloquentProductRepository.php#L22-L25&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;beginTransaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lockForUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findOrFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\Exception&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rollBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- http://minsql.com/mysql/information_schema-innodb_xxx-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-lock-%EC%A0%95%EB%B3%B4-%ED%99%95%EC%9D%B8/&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_LOCK_WAITS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_LOCKS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_TRX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;straight_join&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_mysql_thread_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_trx_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_mysql_thread_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_trx_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_lock_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_mode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_lock_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_lock_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_lock_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_index&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_lock_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_lock_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_mode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_lock_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_lock_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_lock_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_index&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waiting_lock_index&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_LOCK_WAITS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ilw&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_TRX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
   &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_TRX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
   &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_LOCKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
   &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INNODB_LOCKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ilw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blocking_trx_id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trx_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ilw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requesting_trx_id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ilw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blocking_lock_id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lock_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ilw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requested_lock_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 04 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/cheatsheet/understanding-mysql-db-lock/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/cheatsheet/understanding-mysql-db-lock/</guid>
        
        <category>개발자</category>
        
        <category>데이터베이스</category>
        
        
        <category>cheatsheet</category>
        
      </item>
    
      <item>
        <title>아키텍처와 의존성</title>
        <description>&lt;p&gt;이 글은 그간 내가 짠 코드에 대한 반성이며, 앞으로 더 잘 만들겠다는 약속이며, 이런 실수를 하지 말라는 계몽이기도합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;割鷄焉用牛刀(할계언용우도)
닭 잡는 데 어찌 소 잡는 칼을 쓰겠는가?&lt;/p&gt;

  &lt;footer&gt;&lt;cite&gt;논어(論語) &quot;양화(陽貨)&quot;편&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;오해를 하실까봐 미리 쉴드를 칩니다. 제가 좋아하고 자주 인용하는 말입니다.&lt;/p&gt;

&lt;p&gt;그런데 바꾸어 생각해보면, 소잡는데 닭 잡는 칼을 쓰는 것도 바보 같은 짓입니다. 일회성으로 사용할 소프트웨어을 개발할 때는 모든 설계 원칙을 지킬 필요 없습니다만, 계속 유지 보수해야 하는 대형 서비스를 개발할 때는 소 잡는 칼을 써야지요.&lt;/p&gt;

&lt;p&gt;지난 몇 개월간 저의 포커스는 &lt;strong&gt;읽기 쉬운 코드&lt;/strong&gt;였습니다. &lt;em&gt;“팀에 처음 합류한 신입이 코드를 이해하고 바로 프로젝트에 투입할 수 있는가?”&lt;/em&gt; 라는 관점이죠.&lt;/p&gt;

&lt;div class=&quot;panel panel-default&quot;&gt;
  &lt;div class=&quot;panel-body&quot;&gt;
    &lt;p class=&quot;lead&quot;&gt;컴퓨터가 인식 가능한 코드는 바보라도 작성할 수 있지만, 인간이 이해할 수 있는 코드는 실력 있는 프로그래머만 작성할 수 있다.&lt;/p&gt;
    &lt;small class=&quot;text-muted&quot;&gt;- 마틴파울러 &quot;리팩토링&quot;&lt;/small&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;저는 2016년 12월 부터 라라벨 5.2로 개발한 메쉬프라임이라는 서비스 개발에 참여하고 있습니다. 이 서비스는 오픈한 지 대략 1년 됐고 현재는 매일 2만 트랜잭션 정도가 발생하고, 이 트랜잭션에는 네다섯 개 정도의 테이블이 연결되어 있어서, 대략 10만 레코드가 생성됩니다. 오늘 기준으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; 브랜치에 총 3,495 커밋이 있고, 추가된 코드는 대략 42만 라인입니다. 결코 작은 서비스가 아니죠?&lt;/p&gt;

&lt;p&gt;팀 합류 초기에 폭풍같이 몰아치던 기능 추가 프로젝트가 어느 정도 마무리되어, 한 숨 돌리면서, 몇 주전에 라라벨 프레임워크 버전 업을 시도한 적이 있습니다. 운영 서버에 적용할 의도는 아니었지만, 곧 5.5 LTS가 나오니 5.3 -&amp;gt; 5.4까지 마이그레이션 해보자는 취지였지요. 공식 매뉴얼에서 말하는 마이그레이션 가이드를 따라 5.3 마이그레이션을 수행했습니다. 랜딩 페이지가 나오고 로그인도 잘 됐습니다만, API 엔드포인트를 하나씩 호출해 보고 문제점들을 하나씩 잡아가는 과정에서 마이그레이션이 불가하다는 점을 깨닫고 뒤로 물러섰습니다.&lt;/p&gt;

&lt;p&gt;왜 그랬을까요? 바로 이 글에서 쓰고자 하는 &lt;strong&gt;1) 커플링된 코드&lt;/strong&gt;와 &lt;strong&gt;2) 아키텍처&lt;/strong&gt; 때문이었습니다. 본문에 나오는 코드는 메쉬프라임과 무관함을 밝힙니다.&lt;/p&gt;

&lt;p&gt;이제 나는 &lt;strong&gt;읽기 쉬울 뿐만 아니라 유지 보수가 편리한 코드&lt;/strong&gt;를 개발할 것을 약속합니다.&lt;/p&gt;

&lt;div class=&quot;panel panel-default&quot;&gt;
  &lt;div class=&quot;panel-body&quot;&gt;
    &lt;p class=&quot;lead&quot;&gt;프로그램이 지닌 가치는 두 종류다. 하나는 &lt;strong&gt;1) 현재의 기능이라는 가치&lt;/strong&gt;이고, 또 하나는 &lt;strong&gt;2) 미래의 기능이라는 가치&lt;/strong&gt;다. 프로그래밍할 때 개발자는 주로 그 프로그램에 현재 무슨 기능을 넣을지에 전념한다. 버그를 수정하든 새 기능을 추가하든, 그것은 프로그램의 성능을 높임으로써 현재 기능의 가치를 높이는 일이다.&lt;/p&gt;
    &lt;p class=&quot;lead&quot;&gt;프로그램의 현재 기능은 그저 일부에 불과하다는 사실을 깨우치지 않으면 개발자로서 오래 가지 못한다. 오늘 일을 오늘 할 수 있어도 내일 일을 내일 할 능력이 없다면 개발자로서 싪패하게 된다. 오늘 해야 할 일은 알아도 내일 일은 알 수 없는 것이 당연하다. 이런 일, 저런 일, 또는 어쩌면 생각지도 못한 일을 하게 될 수도 있다.&lt;/p&gt;
    &lt;small class=&quot;text-muted&quot;&gt;- 켄트 벡&lt;/small&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!--more--&gt;
&lt;div class=&quot;spacer&quot;&gt;• • •&lt;/div&gt;

&lt;h2 id=&quot;1-강한-결합&quot;&gt;1. 강한 결합&lt;/h2&gt;

&lt;p&gt;어떤 모듈 A가 다른 모듈 B에 “의존”한다는 것은 A가 B의 변수(데이터) 또는 함수(데이터는 변경하는 로직)를 사용하고 있거나, A의 함수에서 B를 파라미터로 받거나 B를 생성하거나, A의 함수에서 B 모듈을 반환하는 등의 모든 행위를 포함합니다. 즉, 모듈 B의 데이터 구조 또는 함수가 변경되면, 모듈 A도 영향을 받는다고 해석할 수 있습니다. 극단적인 경우에는 멀쩡하던 모듈 B의 함수 또는 모듈 자체가 다음 버전에 갑자기 사라질 수도 있겠죠?&lt;/p&gt;

&lt;p&gt;우리의 코드는 프레임워크 개발팀을 믿고 신뢰하며 프레임워크나 ORM의 함수를 사용합니다. 그러나, 그들은 우리에게 자신의 코드를 변경하지 않는다고 어떤 약속도 하지 않았습니다. 결합도가 높은 코드 예제를 볼까요?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// app/Product.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Illuminate\Database\Eloquent\Model&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...  &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getProductImageAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$productImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;public_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;images/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$productImage&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pure 해야 할 도메인 모델이 엘로퀀트라는 큰 덩어리는 상속하고 있습니다. 상속은 아주 강한 결합입니다. 또 이 코드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;public_path()&lt;/code&gt;라는 라라벨 전역 함수에 의존합니다. 문제는 여기에 그치지 않고, 도메인 서비스나 애플리케이션 서비스에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;app()&lt;/code&gt; 전역 함수나 &lt;code class=&quot;highlighter-rouge&quot;&gt;DB&lt;/code&gt;와 같은 라라벨 파사드에 의존하고 있을 겁니다. 지금도 이렇게 짜고 있지 않나요? “아니오” 라고 대답했다면, 둘 중 하나입니다. 거짓말을 하고 있거나, 개발자가 아니거나…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;참고&lt;/code&gt;&lt;/strong&gt; “의존성”에 대해 깃허브 저장소에 예제 코드와 함께 정리하고 있습니다. &lt;a href=&quot;https://github.com/appkr/pattern/tree/master/dependency&quot;&gt;https://github.com/appkr/pattern/tree/master/dependency&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-클린-아키텍처&quot;&gt;2. 클린 아키텍처&lt;/h2&gt;

&lt;p&gt;아래 엉클 밥의 비디오에는 나오지는 않는데, 이 분은 OO(객체지향)를 이렇게 정의하셨습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OO란 Low level detail로 부터 High level policy를 보호하는 것이다.&lt;/p&gt;

  &lt;footer&gt;&lt;cite&gt;로버트 C. 마틴&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;이게 어떻게 가능할까요? 아래 비디오에서는 경계(&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;, 두 줄로 표시합니다)라고 답하고 있습니다. 쉽게 말하면 인터페이스입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o_TH-Y78tt4&amp;amp;t=10m45s&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/o_TH-Y78tt4/0.jpg&quot; alt=&quot;The Principles of Clean Architecture by Uncle Bob Martin&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;중요 내용만 요약했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;High Level 폴더 구조를 보고 Ruby on Rails 앱인줄 바로 알았다.
    &lt;ul&gt;
      &lt;li&gt;웹은 입출력 장치(==딜리버리 메커니즘)인데, 왜 이 앱이 하고자 하는 바를 폴더 구조에서 알 수 없는가?&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;주&lt;/code&gt;&lt;/strong&gt; RoR 폴더 구조를 벤치마크한 라라벨도 마찬가지입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;아키텍처는 해결하고자 하는 문제에 관한 의도를 표현해야한다.
    &lt;ul&gt;
      &lt;li&gt;아키텍처는 스프링, MySQL과 같은 툴이 아니다.&lt;/li&gt;
      &lt;li&gt;의도는 유스케이스(Use Case)를 통해서 드러난다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Interactor는 애플리케이션에 종속적인 비즈니스 룰을 다룬다.
    &lt;ul&gt;
      &lt;li&gt;Domain은 애플리케이션과 무관한 비즈니스 룰을 다룬다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;주&lt;/code&gt;&lt;/strong&gt; 애플리케이션은 웹 시스템에 적용, 모바일 앱에 적용 등을 말할 때의 “적용”의 의미. 앱과 혼동하지 말것.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;앱과 무관한 웹 시스템, 데이터베이스등의 입출력 장치들은 경계(&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;)를 통해서 소스 코드의 의존성을 역전시켜야 한다.
    &lt;ul&gt;
      &lt;li&gt;비즈니스 룰 보다 UI가 더 자주 변경된다. UI의 변경 때문에 비즈니스 률이 영향받지 않아야 한다.&lt;/li&gt;
      &lt;li&gt;데이터베이스도 마찬가지로 디테일에 해당한다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;주&lt;/code&gt;&lt;/strong&gt; 화살표의 방향에 주의하라고 여러번 말씀하심&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프레임워크는 편리함을 선사하지만, 그에 따른 대가를 치러야 하는 시점이 찾아 온다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;비디오에 나온 그림을 전부 종합하면 아래 그림 및 설명과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-07-09-img-01.png&quot; alt=&quot;&quot; /&gt;
&lt;small class=&quot;text-muted&quot;&gt;그림 출처: http://hugo.ferreira.cc/architecture-the-lost-years/&lt;/small&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;small class=&quot;text-muted&quot;&gt;(실선 두 개로 표시된)&lt;/small&gt; 경계 왼쪽에는 우리가 흔히 아는 &lt;code class=&quot;highlighter-rouge&quot;&gt;View&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Controller&lt;/code&gt;가 있습니다. 아래 쪽에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;DataBase(=~Persistence Engine)&lt;/code&gt;가 있습니다.&lt;/li&gt;
  &lt;li&gt;컨트롤러는 사용자의 요청을 받아 &lt;code class=&quot;highlighter-rouge&quot;&gt;Request Model(DTO, Command)&lt;/code&gt;을 만들어서 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Boundary&lt;/code&gt;의 함수를 호출할 때 인자로 담아서 경계 안쪽으로 전달합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor(=~Service Object)&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Boundary&lt;/code&gt;를 구현하고 있고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Controller&lt;/code&gt;에서 넘겨준 &lt;code class=&quot;highlighter-rouge&quot;&gt;Request Model&lt;/code&gt;을 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Entity&lt;/code&gt;의 함수를 호출합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor&lt;/code&gt;는 요청을 수행하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Entity Gateway(=~&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Repository)&lt;/code&gt;의 함수를 호출해서 저장된 상태를 불러 오기도 하고, 변경된 상태를 저장하기도 합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Entity Gateway Impl&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Entity Gateway&lt;/code&gt;를 구현하고 있으며, 데이터베이스 API(SQL, ORM) 또는 File, Collection 등의 함수를 이용해서 조회 및 저장 작업을 수행합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor&lt;/code&gt;는 요청을 처리한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Boundary&lt;/code&gt;의 함수를 호출할 때 인자로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Response Model&lt;/code&gt;을 만들어 경계 바깥 쪽으로 전달합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Presentor&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Boundary&lt;/code&gt;를 구현하고 있으며, &lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor&lt;/code&gt;가 전달한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Response Model&lt;/code&gt;을 가공하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;View Model&lt;/code&gt;의 데이터를 채워줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-모범-사례&quot;&gt;3. 모범 사례&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leopro/trip-planner&quot;&gt;Trip Planner&lt;/a&gt;라는 예제 프로젝트입니다. 커맨드와 유스케이스를 이용하고 있습니다. 아쉽게도 라라벨은 아니고, &lt;a href=&quot;http://symfony.com/&quot;&gt;심포니(Symfony)&lt;/a&gt;와 &lt;a href=&quot;http://www.doctrine-project.org/&quot;&gt;독트린(Doctrine)&lt;/a&gt;을 사용하네요.&lt;/p&gt;

&lt;h3 id=&quot;31-controller&quot;&gt;3.1. Controller&lt;/h3&gt;

&lt;p&gt;컨트롤러에서 아래와 같은 코드를 이용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;CreateTripCommand(=~Request Model)&lt;/code&gt;를 만들어서 &lt;code class=&quot;highlighter-rouge&quot;&gt;UseCase::run()(=~&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Boundary)&lt;/code&gt;을 호출합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new CreateTripCommand('my trip')&lt;/code&gt; 부분을 실제 Http 컨트롤러에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;new CreateTripCommand($request-&amp;gt;get('trip_name')&lt;/code&gt;처럼 사용할 겁니다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;new CreateTripUseCase($tripRepository)&lt;/code&gt; 구문은 IoC 또는 의존성 주입을 사용할 것이므로 생략될 것입니다.&lt;/p&gt;

&lt;p&gt;이 예제는 특별하게도 커맨드 버스를 이용하므로, 컨트롤러 코드에서 커맨드를 만들고, 커맨드 버스를 이용해서 생성된 커맨드를 전달하고, 커맨드 핸들러가 커맨드를 처리할 커맨드 핸들러(=~&lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor&lt;/code&gt;)를 찾아서 &lt;code class=&quot;highlighter-rouge&quot;&gt;run()&lt;/code&gt; 메서드를 실행하고 컨트롤러 쪽으로 실행 결과를 반환해 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/leopro/trip-planner/blob/master/src/Leopro/TripPlanner/Application/Tests/CreateTripTest.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Leopro\TripPlanner\Application\Tests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateTripTest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\PHPUnit_Framework_TestCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testCreateTrip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$tripRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMockBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreateTripCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'my trip'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$useCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreateTripUseCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tripRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$useCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertInstanceOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;32-request-model&quot;&gt;3.2. Request Model&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CreateTripCommand&lt;/code&gt;라는 Request Model 입니다. 커맨드를 사용하므로 커맨드 버스나 핸들러와 같은 복잡한 개념이 나오는데, 커맨드의 근본은 DTO(Data Transfer Object)를 사용하는 것과 마찬가지로 로직이 없는 순수 데이터 구조체입니다.&lt;/p&gt;

&lt;p&gt;DTO 보다 커맨드 시스템이 더 나은 점은 1) 커맨드 이름만으로 의도가 확실히 드러난다는 점, 2) 웹, 콘솔 등 다양한 애플리케이션(=~적용 방식, 입출력 장치)에서 재사용할 수 있다는 점, 3) 테스트가 편하다는 점 등을 들 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/leopro/trip-planner/blob/master/src/Leopro/TripPlanner/Application/Command/CreateTripCommand.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Leopro\TripPlanner\Application\Command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateTripCommand&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Command&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArrayCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
          &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;33-interactor&quot;&gt;3.3. Interactor&lt;/h3&gt;

&lt;p&gt;이 예제에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;UseCase&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Boundary&lt;/code&gt;이고, 이를 구현한 &lt;code class=&quot;highlighter-rouge&quot;&gt;CreateTripUseCase&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor&lt;/code&gt;입니다. DTO를 사용하는 전통적인 구현이라면, &lt;code class=&quot;highlighter-rouge&quot;&gt;CreateTripService&lt;/code&gt;와 같은 이름으로 지었을 겁니다.&lt;/p&gt;

&lt;p&gt;코드를 살펴보면, 유효한 커맨드인지 검사를 수행하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;createWithFirstRoute()&lt;/code&gt; 함수를 호출해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Trip&lt;/code&gt; 이라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Entity&lt;/code&gt;를 만듭니다. 그리고, 생성자를 통해서 주입 받은 &lt;code class=&quot;highlighter-rouge&quot;&gt;TripRepository&lt;/code&gt; 인터페이스의 &lt;code class=&quot;highlighter-rouge&quot;&gt;add()&lt;/code&gt; 함수를 호출함으로써 생성된 엔티티를 영속화시킵니다. 뒤에서 다시 보겠지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;TripRepository&lt;/code&gt;는 2절의 그림에서 본 경계 안 쪽에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;I&amp;gt;&amp;gt;Entity Gateway&lt;/code&gt;입니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/leopro/trip-planner/blob/master/src/Leopro/TripPlanner/Application/UseCase/CreateTripUseCase.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Leopro\TripPlanner\Application\UseCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateTripUseCase&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractUseCase&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UseCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tripRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TripRepository&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tripRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getManagedCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exceptionIfCommandNotManaged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Trip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createWithFirstRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TripIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uniqid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tripRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;34-entity&quot;&gt;3.4. Entity&lt;/h3&gt;

&lt;p&gt;3.3. 절에서 호출한 &lt;code class=&quot;highlighter-rouge&quot;&gt;createWithFirstRoute&lt;/code&gt; 함수가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Trip&lt;/code&gt; 모델의 상태를 변경합니다.&lt;/p&gt;

&lt;p&gt;여기서 주목할 점은 데이터베이스와의 결합도를 낮추기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;TripIdentity&lt;/code&gt; 타입의 식별자를 사용한다는 점입니다. 데이터베이스에 의존하는 구현에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT INTO ...&lt;/code&gt; 하기 전에는 엔티티의 식별자를 알 수 없고, 메모리 안에서 불완전한 상태로 살아있게 되는 문제가 있습니다.&lt;/p&gt;

&lt;p&gt;또 하나 지적하고 싶은 점은 PHP의 한계 중에 하나인 메서드 오버로딩(overloading)입니다. 오버로딩을 할 수 없기 때문에 생성자를 Private로 선언하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;createWithFirstRoute()&lt;/code&gt;라는 정적 팩토리 메서드를 제공하고 있습니다. 오버로딩이 지원되었다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;__construct(TripIdentity $identity)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;__construct(TripIdentity $identity, $name)&lt;/code&gt;처럼 생성자를 여러 개 만들었겠지요?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/leopro/trip-planner/blob/master/src/Leopro/TripPlanner/Domain/Entity/Trip.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Leopro\TripPlanner\Domain\Entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Trip&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TripIdentity&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createWithFirstRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TripIdentity&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;35-entity-gateway&quot;&gt;3.5. Entity Gateway&lt;/h3&gt;

&lt;p&gt;3.4. 절에서 호출했던 그 인터페이스입니다. 특이한 점은 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;persist()&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;add()&lt;/code&gt;라는 함수명을 쓰고 있습니다. 현재까지의 전체 구현이 PHP의 네이티브 배열을 랩핑한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;을 데이터 저장소로 사용하고 있어서이며, 영속성을 위한 저장 장치에 앱이 의존하지 않는다는 것을 한번 더 강조하는 네이밍입니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/leopro/trip-planner/blob/master/src/Leopro/TripPlanner/Domain/Contract/TripRepository.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Leopro\TripPlanner\Domain\Contract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TripRepository&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TripIdentity&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Trip&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$trip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;36-response-model&quot;&gt;3.6. Response Model&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Interactor&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Response&lt;/code&gt; 모델에 데이터를 담아서 경계 바깥 쪽으로 내보냅니다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// https://github.com/leopro/trip-planner/blob/master/src/Leopro/TripPlanner/Application/Response/Response.php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Leopro\TripPlanner\Application\Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Response&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;37-all-together&quot;&gt;3.7. All Together&lt;/h3&gt;

&lt;p&gt;아래 UML을 엉클 밥의 그림에 겹쳐보면… 소름이 돋습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-07-09-img-02.png&quot; alt=&quot;Trip Planner&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;38-why&quot;&gt;3.8. Why?&lt;/h3&gt;

&lt;p&gt;다음 코드와 같이 컨트롤러에서 몇 줄만 쓰면 될 것을 복잡한 보일러 플레이트를 양산하면서 이렇게 짜고 있을까요?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Http\Controllers&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TripController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Trip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;강한 결합도(소프트웨어의 제 2가치 위반)로 발생하는 비용은 보일러 플레이트를 쓰는 비용보다 더 크기 때문입니다. 의존성이 없다는 것은 독립적으로 개발할 수 있다는 의미입니다. 독립적으로 개발할 수 있다는 것은 독립적으로 컴파일(패키징)할 수 있다는 의미입니다. 독립적으로 컴파일할 수 있다는 것은 독립적으로 배포할 수 있다는 의미입니다.&lt;/p&gt;

&lt;p&gt;업종마다 서비스마다 다를 수 있으니 오해마시기 바랍니다. 가령 여러 고객의 요구사항을 빠르게 찍어 내야 하는 웹 에이전시나, 한 달짜리 마케팅 캠페인용 서비스라면 바로 위의 코드와 같이 짠다고 해도 누가 뭐라 하겠습니까?&lt;/p&gt;

&lt;p&gt;Ruby On Rails 커뮤니티에서도 DHH가 직접 나서서 똑같은 주제로 논쟁을 하고 있습니다. &lt;a href=&quot;https://gist.github.com/dhh/4849a20d2ba89b34b201&quot;&gt;https://gist.github.com/dhh/4849a20d2ba89b34b201&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-앞으로-할-일&quot;&gt;4. 앞으로 할 일&lt;/h2&gt;

&lt;p&gt;이 글에서 소개한 “커맨드 버스”와 지난 포스트에서 소개한 “&lt;small&gt;(의사, Pseudo)&lt;/small&gt; 이벤트 소싱”은 라라벨에도 내장되어 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Job&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Notification&lt;/code&gt;이 바로 그것들인데요. 또 프레임워크에 의존하는 코드를 생산할까봐 조심스럽습니다. 컴포저로 설치한 3rd Party 컴포넌트도 전부 마찬가지 아니냐고 반문할 수 있습니다. 예! 맞습니다. 피하려면 라이브러리에서 제공하는 객체를 의존성 주입으로 사용하거나, IoC(서비스 컨테이너)를 이용해서 주입하거나, 앱 경계 안쪽에 인터페이스를 만들고 라이브러리를 &lt;a href=&quot;https://en.wikipedia.org/wiki/Adapter_pattern&quot;&gt;Adapter&lt;/a&gt; 또는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator&lt;/a&gt; 패턴으로 한번 랩핑해서 사용하는 방법이 있습니다.&lt;/p&gt;

&lt;p&gt;지난 포스트 이후, 설계에 관한 고민을 하며 여기저기 기웃댔지만, 아직 라라벨의 의존성을 완전히 걷어낸 오픈 소스, 예제 프로젝트, 또는 방법을 설명하는 블로그 포스트는 찾지 못했습니다. 우선 라라벨 프로젝트에서 엘로퀀트를 완전히 경계 밖으로 내보내고 도메인 엔티티를 POPO(Plain Old PHP Object)로 만드는 방법을 연구할 겁니다. 이게 된다면, 엉클 밥이 말씀하신 프레임워크에 의존하지 않는, 또는 본문의 Trip Planner 예제처럼 HTTP와 같은 입출력 장치에 완전히 격리되어 작동하는 앱을 얻을 수 있을 겁니다. POPO를 이용함으로 그냥 공짜로 얻는 이점은 서두에 언급한 누구나 읽을 수 있는 코드입니다. 라라벨 매직이 전부 빠졌기 때문이죠.&lt;/p&gt;

&lt;p&gt;지난 번 불변 엔티티도 깃허브 리포만 파 놓고 설계에 대한 고민들을 하다가 손을 못 대고 있었습니다. 확보된 코드는 도메인 주도 설계, 커맨드 주도 아키텍처, 이벤트소싱 &amp;amp; CQRS 등 새로운 아키텍처를 실험하기 위한 베이스로 사용할 예정입니다. 이번에도 조언 환영합니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Jul 2017 00:00:00 +0900</pubDate>
        <link>http://blog.appkr.kr/learn-n-think/clean-architecture-and-dependency/</link>
        <guid isPermaLink="true">http://blog.appkr.kr/learn-n-think/clean-architecture-and-dependency/</guid>
        
        <category>개발자</category>
        
        <category>아키텍처</category>
        
        
        <category>learn-n-think</category>
        
      </item>
    
  </channel>
</rss>
